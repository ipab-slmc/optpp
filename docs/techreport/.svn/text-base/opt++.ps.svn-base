%!PS (but not EPSF; comments have been disabled)
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR}B /@letter{/vsize 10 N}B /@landscape{
/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@legal{/vsize 13 N}
B /@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[
1 0 0 -1 0 0]N /FBB[0 0 0 0]N /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf
X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /E{pop nn dup definefont setfont}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B
/ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup length 4 sub
get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup
length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ctr 0 N
/CharBuilder{save 3 1 roll S dup /base get 2 index get S /BitMaps get S get
/ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width
add ch-yoff setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub
ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{
]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B
/bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0 moveto}B /eop{
clear SI restore showpage userdict /eop-hook known{eop-hook}if}B /@start{
userdict /start-hook known{start-hook}if /VResolution X /Resolution X 1000 div
/DVImag X /IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}
B /p /show load N /RMat[1 0 0 -1 -.1 -.1]N /BDot 8 string N /v{/ruley X /rulex
X V}B /V{gsave TR rulex ruley false RMat{BDot}imagemask grestore}B /a{moveto}
B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p
tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{
p 2 w}B /s{p 3 w}B /t{p 4 w}B /w{0 rmoveto}B /x{0 S rmoveto}B /y{3 2 roll p a}
B /bos{/SS save N}B /eos{clear SS restore}B end
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div
/vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true N}B /@hoffset{
/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}B /@llx{/llx X}
B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B /magscale true
def end /@MacSetUp{userdict /md known{userdict /md get type /dicttype eq{md
begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx defaultmatrix
dtransform S atan/pa X newpath clippath mark{transform{itransform moveto}}{
transform{itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2
roll transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore /gc xdf pop
ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1 scale}
if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get
neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not and{pop S
neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270 rotate 1 -1
scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get
neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not and{TR pop
pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{TR
pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{
ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale
neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}if}N /normalscale
{Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale}if}
N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR /psf$ury
psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts
currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N
/psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div
psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N
/copypage{}N @MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint
6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N /endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin /SpecialSave save N gsave normalscale currentpoint
TR @SpecialDefaults}B /@setspecial{CLIP{newpath 0 0 moveto hs 0 rlineto 0 vs
rlineto hs neg 0 rlineto closepath clip}{initclip}ifelse ho vo TR hsc vsc
scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg TR}if
/showpage{}N /erasepage{}N /copypage{}N newpath}B /@endspecial{grestore clear
SpecialSave restore end}B /@defspecial{SDict begin}B /@fedspecial{end}B /li{
lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}B /st{stroke SaveX SaveY moveto}B /fil{fill SaveX SaveY
moveto}B /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}B end
TeXDict begin 1000 300 300 @start /Fa 37 123 df<183C3C3C0404080810204080060C77
9C0D>39 D<000100000300000300000300000300000600000600000600000600000C00000C0000
0C00FFFFFFFFFFFF00180000180000180000300000300000300000300000600000600000600000
6000004000181A7A9620>43 D<FFC0FFC0FFC00A037D890F>45 D<003E0000C1800101800200C0
0400C00440C00841C00841C00841C0088380070380000700000E0001F800003800000C00000C00
000E00000E00000E00000E00700E00E01C00801C0080380080300040600021C0001F0000121D7C
9B15>51 D<003C0000C6000183000303000603000E03000C03801C03801C03001C030038070038
0700380700380F00380E00181E00181E000C6C00079C00001C00001800003800003000006000E0
C000E0C0008180008600007C0000111D7B9B15>57 D<0000180000001800000038000000380000
007800000078000000B8000001B800000138000002380000023C0000041C0000041C0000081C00
00181C0000101C0000201C0000201C00007FFC0000401C0000801C0001801C0001001C0002001C
0002001C0004000E000C000E001C001E00FF00FFC01A1D7E9C1F>65 D<0003F020001E0C600030
02E000E003C001C001C0038001C0070000C00E0000801E0000801C0000803C0000803C00000078
0000007800000078000000F0000000F0000000F0000000F0000000F0000400F0000400F0000400
F0000800700008007000100038002000180040000C0180000706000001F800001B1E7A9C1E>67
D<0003F020001E0C60003002E000E003C001C001C0038001C0070000C00E0000801E0000801C00
00803C0000803C000000780000007800000078000000F0000000F0000000F001FFC0F0001E00F0
001C00F0001C00F0001C00F0001C00700038007000380038003800180078000C00900007071000
01F800001B1E7A9C20>71 D<01FFC0003C00003800003800003800003800007000007000007000
00700000E00000E00000E00000E00001C00001C00001C00001C000038000038000038000038000
0700000700000700000700000F0000FFE000121C7E9B10>73 D<01FFC0FF003C003C0038003000
38004000380080003801000070020000700400007010000070200000E0400000E0C00000E1C000
00E5C00001C8E00001D0E00001E0E00001C0700003807000038070000380380003803800070038
0007001C0007001C0007001C000F001E00FFE0FF80201C7D9B20>75 D<01FFE0003C0000380000
380000380000380000700000700000700000700000E00000E00000E00000E00001C00001C00001
C00001C0000380080380080380080380100700100700300700600700E00E03C0FFFFC0151C7D9B
1A>I<01FC03FE001C0070003C0060002E0040002E0040002E0040004700800047008000470080
004380800083810000838100008181000081C1000101C2000101C2000100E2000100E2000200E4
000200740002007400020074000400380004003800040038000C0018001C001000FF8010001F1C
7D9B1F>78 D<0007F000001C1C0000700E0000E0070001C0038003800380070003800E0003C01E
0003C01C0003C03C0003C03C0003C0780003C0780003C0780003C0F0000780F0000780F0000780
F0000F00F0000F00F0000E00F0001E00F0003C0070003800700070007800E0003801C0001C0380
000E0E000003F800001A1E7A9C20>I<01FFFC00003C070000380380003801C0003801C0003801
C0007003C0007003C0007003C00070038000E0078000E0070000E00E0000E0380001FFE00001C0
000001C0000001C000000380000003800000038000000380000007000000070000000700000007
0000000F000000FFE000001A1C7D9B1C>I<000F8400304C00403C008018010018030018030018
06001006001006000007000007000003E00003FC0001FF00007F800007C00001C00001C00000C0
0000C02000C02000C0600180600180600300600200F00400CC180083E000161E7D9C17>83
D<1FFFFFC01C0701C0300E00C0200E0080600E0080400E0080401C0080801C0080801C0080001C
0000003800000038000000380000003800000070000000700000007000000070000000E0000000
E0000000E0000000E0000001C0000001C0000001C0000001C0000003C000007FFE00001A1C799B
1E>I<FF83FF0FF03C007001C038007001803800F001003800F002003801700200380170040038
0270040038027008001C047008001C047010001C087010001C087020001C107020001C10704000
1C207040001C207080001C407180001C407100001C807200001D807200001D007400001E007400
001E007800001C007800001C00700000180070000018006000001000600000241D779B29>87
D<03CC063C0C3C181C3838303870387038E070E070E070E070E0E2C0E2C0E261E462643C380F12
7B9115>97 D<3F00070007000E000E000E000E001C001C001C001C0039C03E6038303830703870
3870387038E070E070E070E060E0E0C0C0C1C0618063003C000D1D7B9C13>I<01F007080C0818
1C3838300070007000E000E000E000E000E000E008E010602030C01F000E127B9113>I<001F80
000380000380000700000700000700000700000E00000E00000E00000E0003DC00063C000C3C00
181C00383800303800703800703800E07000E07000E07000E07000E0E200C0E200C0E20061E400
6264003C3800111D7B9C15>I<01E007100C1018083810701070607F80E000E000E000E000E000
E0086010602030C01F000D127B9113>I<0003C0000670000C70001C60001C00001C0000380000
380000380000380000380003FF8000700000700000700000700000700000E00000E00000E00000
E00000E00001C00001C00001C00001C00001C000038000038000038000030000030000070000C6
0000E60000CC00007800001425819C0D>I<00F3018F030F06070E0E0C0E1C0E1C0E381C381C38
1C381C383830383038187818F00F700070007000E000E0C0C0E1C0C3007E00101A7D9113>I<0F
C00001C00001C0000380000380000380000380000700000700000700000700000E78000E8C000F
0E000E0E001C0E001C0E001C0E001C0E00381C00381C00381C0038380070388070388070708070
7100E03200601C00111D7D9C15>I<01800380010000000000000000000000000000001C002600
470047008E008E000E001C001C001C0038003800710071007100720072003C00091C7C9B0D>I<
0006000E0006000000000000000000000000000000F00118021802180438043800380038007000
700070007000E000E000E000E001C001C001C001C003800380C300E700CE0078000F24819B0D>
I<3C1E0780266318C04683A0E04703C0E08E0380E08E0380E00E0380E00E0380E01C0701C01C07
01C01C0701C01C070380380E0388380E0388380E0708380E0710701C0320300C01C01D127C9122
>109 D<3C3C002646004687004707008E07008E07000E07000E07001C0E001C0E001C0E001C1C
00381C40381C40383840383880701900300E0012127C9117>I<01E007180C0C180C380C300E70
0E700EE01CE01CE01CE018E038E030E06060C031801E000F127B9115>I<07870004D98008E0C0
08E0C011C0E011C0E001C0E001C0E00381C00381C00381C0038180070380070300070700070600
0E8C000E70000E00000E00001C00001C00001C00001C00003C0000FF8000131A7F9115>I<3C3C
26C2468747078E068E000E000E001C001C001C001C0038003800380038007000300010127C9112
>114 D<01F006080C080C1C18181C001F001FC00FF007F0007800386030E030C030806060C01F
000E127D9111>I<00C001C001C001C00380038003800380FFE00700070007000E000E000E000E
001C001C001C001C00384038403840388019000E000B1A7D990E>I<1E03002707004707004707
00870E00870E000E0E000E0E001C1C001C1C001C1C001C1C003838803838801838801839001C59
00078E0011127C9116>I<1E01832703874703874703838707018707010E07010E07011C0E021C
0E021C0E021C0E04180C04181C04181C081C1C100C263007C3C018127C911C>119
D<038207C20FEC08381008001000200040008001000200040008081008383067F043E081C00F12
7D9111>122 D E /Fb 68 124 df<007E1F0001C1B1800303E3C00703C3C00E03C1800E01C000
0E01C0000E01C0000E01C0000E01C0000E01C000FFFFFC000E01C0000E01C0000E01C0000E01C0
000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01
C0000E01C0000E01C0007F87FC001A1D809C18>11 D<003F07E00001C09C18000380F018000701
F03C000E01E03C000E00E018000E00E000000E00E000000E00E000000E00E000000E00E00000FF
FFFFFC000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C00
0E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C
000E00E01C007FC7FCFF80211D809C23>14 D<0006000000060000000600000006000000060000
0006000000060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFF
E00006000000060000000600000006000000060000000600000006000000060000000600000006
00000006000000060000000600001B1C7E9720>43 D<60F0F0701010101020204080040C7C830C
>I<FFE0FFE00B0280890E>I<60F0F06004047C830C>I<00010003000600060006000C000C000C
0018001800180030003000300060006000C000C000C0018001800180030003000300060006000C
000C000C00180018001800300030003000600060006000C000C00010297E9E15>I<03C00C3018
18300C300C700E60066006E007E007E007E007E007E007E007E007E007E007E007E007E0076006
6006700E300C300C18180C3007E0101D7E9B15>I<030007003F00C70007000700070007000700
070007000700070007000700070007000700070007000700070007000700070007000F80FFF80D
1C7C9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F000E000E001C001C003800
70006000C00180030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C78
1E780E781E381E001C001C00180030006007E00030001C001C000E000F000F700FF80FF80FF80F
F00E401C201C183007E0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000DC0000
9C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C01C00FFFFC000
1C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C3FF83FF03FC020
002000200020002000200023E024302818301C200E000E000F000F000F600FF00FF00FF00F800E
401E401C2038187007C0101D7E9B15>I<00F0030C06040C0E181E301E300C700070006000E3E0
E430E818F00CF00EE006E007E007E007E007E007600760077006300E300C18180C3003E0101D7E
9B15>I<4000007FFF807FFF007FFF004002008004008004008008000010000010000020000060
0000400000C00000C00001C0000180000180000380000380000380000380000780000780000780
00078000078000078000030000111D7E9B15>I<03E00C301008200C2006600660066006700678
0C3E083FB01FE007F007F818FC307E601E600FC007C003C003C003C00360026004300C1C1007E0
101D7E9B15>I<03C00C301818300C700C600EE006E006E007E007E007E007E0076007700F300F
18170C2707C700060006000E300C780C78187010203030C00F80101D7E9B15>I<003F800000C0
600003001800040004000800020010000100201F00802070808040E0404040C0384041C0384081
80382083803820838038208380382083803820838038208180382041C0382040C0384040E07840
20709880201F0F00100000000800000004000000030001E000C01F80003FF0001B1D7E9C20>64
D<000600000006000000060000000F0000000F0000000F00000017800000178000001780000023
C0000023C0000023C0000041E0000041E0000041E0000080F0000080F0000180F8000100780001
FFF80003007C0002003C0002003C0006003E0004001E0004001E000C001F001E001F00FF80FFF0
1C1D7F9C1F>I<FFFFC00F00F00F00380F003C0F001C0F001E0F001E0F001E0F001E0F001C0F00
3C0F00780F01F00FFFE00F00780F003C0F001E0F000E0F000F0F000F0F000F0F000F0F000F0F00
1E0F001E0F003C0F0078FFFFE0181C7E9B1D>I<001F808000E0618001801980070007800E0003
801C0003801C00018038000180780000807800008070000080F0000000F0000000F0000000F000
0000F0000000F0000000F0000000F0000000700000807800008078000080380000801C0001001C
0001000E000200070004000180080000E03000001FC000191E7E9C1E>I<FFFFC0000F00F0000F
003C000F000E000F0007000F0007000F0003800F0003C00F0001C00F0001C00F0001E00F0001E0
0F0001E00F0001E00F0001E00F0001E00F0001E00F0001E00F0001C00F0001C00F0003C00F0003
800F0007800F0007000F000E000F001C000F007000FFFFC0001B1C7E9B20>I<FFFFFC0F003C0F
000C0F00040F00040F00060F00020F00020F02020F02000F02000F02000F06000FFE000F06000F
02000F02000F02000F02010F00010F00020F00020F00020F00060F00060F000C0F003CFFFFFC18
1C7E9B1C>I<FFFFF80F00780F00180F00080F00080F000C0F00040F00040F02040F02000F0200
0F02000F06000FFE000F06000F02000F02000F02000F02000F00000F00000F00000F00000F0000
0F00000F00000F8000FFF800161C7E9B1B>I<001F808000E0618001801980070007800E000380
1C0003801C00018038000180780000807800008070000080F0000000F0000000F0000000F00000
00F0000000F0000000F000FFF0F0000F80700007807800078078000780380007801C0007801C00
07800E00078007000B800180118000E06080001F80001C1E7E9C21>I<FFF3FFC00F003C000F00
3C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F
003C000FFFFC000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C00
0F003C000F003C000F003C000F003C000F003C00FFF3FFC01A1C7E9B1F>I<FFF00F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F00FFF00C1C7F9B0F>I<1FFF00F800780078007800780078007800780078007800
780078007800780078007800780078007800787078F878F878F878F0F040E021C01F00101D7F9B
15>I<FFF03FE00F000F000F000C000F0008000F0010000F0020000F0040000F0080000F010000
0F0200000F0400000F0E00000F1F00000F2F00000F2780000F4780000F83C0000F01E0000F01E0
000F00F0000F00F8000F0078000F003C000F003C000F001E000F001F000F001F80FFF07FF01C1C
7E9B20>I<FFF8000F80000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00080F00080F00080F00180F00180F00100F
00300F00700F01F0FFFFF0151C7E9B1A>I<FF8000FF800F8000F8000F8000F8000BC00178000B
C00178000BC001780009E002780009E002780008F004780008F004780008F00478000878087800
08780878000878087800083C107800083C107800083C107800081E207800081E207800081E2078
00080F407800080F40780008078078000807807800080780780008030078001C03007800FF8307
FF80211C7E9B26>I<FF007FC00F800E000F8004000BC0040009E0040009E0040008F0040008F8
040008780400083C0400083C0400081E0400080F0400080F0400080784000807C4000803C40008
01E4000801E4000800F40008007C0008007C0008003C0008003C0008001C0008000C001C000C00
FF8004001A1C7E9B1F>I<003F800000E0E0000380380007001C000E000E001C0007003C000780
38000380780003C0780003C0700001C0F00001E0F00001E0F00001E0F00001E0F00001E0F00001
E0F00001E0F00001E0700001C0780003C0780003C0380003803C0007801C0007000E000E000700
1C000380380000E0E000003F80001B1E7E9C20>I<FFFF800F00E00F00780F003C0F001C0F001E
0F001E0F001E0F001E0F001E0F001C0F003C0F00780F00E00FFF800F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F0000FFF000171C7E9B1C>I<FFFF00000F
01E0000F0078000F003C000F001C000F001E000F001E000F001E000F001E000F001C000F003C00
0F0078000F01E0000FFF00000F03C0000F00E0000F00F0000F0078000F0078000F0078000F0078
000F0078000F0078000F0078100F0078100F0038100F003C20FFF01C20000007C01C1D7E9B1F>
82 D<07E0801C1980300580700380600180E00180E00080E00080E00080F00000F800007C0000
7FC0003FF8001FFE0007FF0000FF80000F800007C00003C00001C08001C08001C08001C0C00180
C00180E00300D00200CC0C0083F800121E7E9C17>I<7FFFFFC0700F01C0600F00C0400F004040
0F0040C00F0020800F0020800F0020800F0020000F0000000F0000000F0000000F0000000F0000
000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000001F800003FFFC001B1C7F9B1E>I<FFF07FC00F000E000F0004000F0004
000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F00
04000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F0004000700080007
800800038010000180100000C020000070C000001F00001A1D7E9B1F>I<FFE0FFE0FF1F001F00
3C1E001E00180F001F00100F001F00100F001F001007801F00200780278020078027802003C027
804003C043C04003C043C04003E043C04001E081E08001E081E08001E081E08000F100F10000F1
00F10000F100F100007900FA00007A007A00007A007A00003E007C00003C003C00003C003C0000
3C003C00001800180000180018000018001800281D7F9B2B>87 D<FFF007FC0F8001E007800080
07C0018003C0010003E0020001F0020000F0040000F8040000780800007C1800003C1000001E20
00001F2000000F4000000FC0000007800000078000000780000007800000078000000780000007
800000078000000780000007800000078000007FF8001E1C809B1F>89 D<FEFEC0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91
D<FEFE060606060606060606060606060606060606060606060606060606060606060606060606
06FEFE0729809E0C>93 D<1FC000307000783800781C00301C00001C00001C0001FC000F1C0038
1C00701C00601C00E01C40E01C40E01C40603C40304E801F870012127E9115>97
D<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C7C001D86
001E03001C01801C01C01C00C01C00E01C00E01C00E01C00E01C00E01C00E01C00C01C01C01C01
801E030019060010F800131D7F9C17>I<07E00C301878307870306000E000E000E000E000E000
E00060007004300418080C3007C00E127E9112>I<003F00000700000700000700000700000700
00070000070000070000070000070003E7000C1700180F00300700700700600700E00700E00700
E00700E00700E00700E00700600700700700300700180F000C370007C7E0131D7E9C17>I<03E0
0C301818300C700E6006E006FFFEE000E000E000E00060007002300218040C1803E00F127F9112
>I<00F8018C071E061E0E0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E007FE00F1D809C0D>I<00038003C4C00C38C01C38
80181800381C00381C00381C00381C001818001C38000C300013C0001000003000001800001FF8
001FFF001FFF803003806001C0C000C0C000C0C000C06001803003001C0E0007F800121C7F9215
>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C7C001C
87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C
03801C03801C0380FF9FF0141D7F9C17>I<18003C003C00180000000000000000000000000000
00FC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091D
7F9C0C>I<00C001E001E000C000000000000000000000000000000FE000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E060E0F0C0F1C061803E
000B25839C0D>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C
00001C3FC01C0F001C0C001C08001C10001C20001C40001CE0001DE0001E70001C78001C38001C
3C001C1C001C0E001C0F001C0F80FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C00FF80091D7F9C0C>I<FC7E07E0001C838838001D019018001E01E01C001C01C01C001C01C0
1C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01
C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>I<FC7C001C87001D0300
1E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C0380FF9FF014127F9117>I<03F0000E1C00180600300300700380600180E001C0E001C0E001
C0E001C0E001C0E001C06001807003803003001806000E1C0003F00012127F9115>I<FC7C001D
86001E03001C01801C01C01C00C01C00E01C00E01C00E01C00E01C00E01C00E01C01C01C01C01C
01801E03001D06001CF8001C00001C00001C00001C00001C00001C00001C0000FF8000131A7F91
17>I<FCE01D301E781E781C301C001C001C001C001C001C001C001C001C001C001C001C00FFC0
0D127F9110>114 D<1F9030704030C010C010E010F8007F803FE00FF000F880388018C018C018
E010D0608FC00D127F9110>I<04000400040004000C000C001C003C00FFE01C001C001C001C00
1C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>I<FC1F801C0380
1C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0780
0C07800E1B8003E3F014127F9117>I<FF07E03C03801C01001C01000E02000E02000704000704
0007040003880003880003D80001D00001D00000E00000E00000E00000400013127F9116>I<FF
3FCFE03C0F03801C0701801C0701001C0B01000E0B82000E0B82000E1182000711C4000711C400
0720C40003A0E80003A0E80003C0680001C0700001C0700001803000008020001B127F911E>I<
7F8FF00F03800F030007020003840001C80001D80000F00000700000780000F800009C00010E00
020E000607000403801E07C0FF0FF81512809116>I<FF07E03C03801C01001C01000E02000E02
0007040007040007040003880003880003D80001D00001D00000E00000E00000E0000040000040
00008000008000F08000F10000F300006600003C0000131A7F9116>I<7FFC70386038407040F0
40E041C003C0038007000F040E041C043C0C380870087038FFF80E127F9112>I<FFFFF0140180
8B15>I E /Fc 6 84 df<000FC040007030C001C009C0038005C0070003C00E0001C01E0000C0
1C0000C03C0000C07C0000407C00004078000040F8000000F8000000F8000000F8000000F80000
00F8000000F8000000F8000000F8000000780000007C0000407C0000403C0000401C0000401E00
00800E000080070001000380020001C0040000703800000FC0001A217D9F21>67
D<FFFFFF000F800F00078003000780030007800100078001800780008007800080078000800780
80800780800007808000078080000781800007FF80000781800007808000078080000780800007
808000078000200780002007800020078000400780004007800040078000C0078000C007800180
0F800F80FFFFFF801B1F7E9E1F>69 D<FFFFFF000F800F00078003000780030007800100078001
8007800080078000800780008007800080078080000780800007808000078080000781800007FF
800007818000078080000780800007808000078080000780000007800000078000000780000007
8000000780000007800000078000000FC00000FFFE0000191F7E9E1E>I<FF803FF807C007C007
C0038005E0010005E0010004F001000478010004780100043C0100043C0100041E0100040F0100
040F010004078100040781000403C1000401E1000401E1000400F1000400F1000400790004003D
0004003D0004001F0004001F0004000F0004000700040007000E0003001F000300FFE001001D1F
7E9E22>78 D<FFFF80000F80F0000780780007803C0007801E0007801E0007801F0007801F0007
801F0007801F0007801E0007801E0007803C00078078000780F00007FF80000781C0000780E000
0780F0000780700007807800078078000780780007807C0007807C0007807C0007807C0407807E
0407803E040FC01E08FFFC0F10000003E01E207E9E21>82 D<07E0800C19801007803003806001
80600180E00180E00080E00080E00080F00000F000007800007F00003FF0001FFC000FFE0003FF
00001F800007800003C00003C00001C08001C08001C08001C08001C0C00180C00380E00300F006
00CE0C0081F80012217D9F19>I E /Fd 23 120 df<701CF01EF01EF01EF01EF01EF01EF01E70
1C701C701C701C701C600C0F0E7B9D1A>34 D<01818003C3C003C3C003C3C003C3C003C3C003C3
C07FFFF0FFFFF8FFFFF8FFFFF80787800787800787800F8F800F0F000F0F000F0F000F0F00FFFF
F8FFFFF8FFFFF87FFFF01E1E001E1E001E1E001E1E001E1E001E1E000C0C00151E7E9D1A>I<7F
FFC0FFFFE0FFFFE07FFFC013047D901A>45 D<3078FCFC7830060676851A>I<03F1C00FFDC03F
FFC07C0FC07003C0E003C0E001C0E001C0E001C0E000007000007800003F00001FF00007FE0000
FF00000F800003C00001C00000E00000E06000E0E000E0E000E0E001C0F001C0FC0780FFFF80EF
FE00E3F800131E7D9D1A>83 D<1FF0003FFC007FFE00780F00300700000380000380007F8007FF
801FFF803F8380780380700380E00380E00380E00380700780780F803FFFFC1FFDFC07F0FC1615
7D941A>97 D<00FF8003FFC00FFFE01F01E03C00C0780000700000700000E00000E00000E00000
E00000E000007000007000007800703C00701F01F00FFFE003FFC000FE0014157D941A>99
D<001FC0001FC0001FC00001C00001C00001C00001C00001C00001C001F1C007FDC00FFFC01E0F
C03C07C07803C07001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C07003C07003C03807
C03E0FC01FFFFC07FDFC01F1FC161E7E9D1A>I<01F80007FF000FFF801E07C03C01C07800E070
00E0E00070E00070FFFFF0FFFFF0FFFFF0E000007000007000007800703C00701F01F00FFFE003
FFC000FE0014157D941A>I<0007E0001FF0003FF800787800F03000E00000E00000E00000E000
7FFFF0FFFFF0FFFFF000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E00000E00000E00000E00000E0003FFF807FFFC03FFF80151E7F9D1A>I<FE0000FE0000FE00
000E00000E00000E00000E00000E00000E00000E3E000EFF800FFFC00FC1C00F80E00F00E00E00
E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E0FFE3FEFFE7
FEFFE3FE171E7F9D1A>104 D<00C00001E00001E00000C0000000000000000000000000000000
000000007FE0007FE0007FE00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E0007FFF80FFFFC07FFF80121F7C9E1A>I<FFE000FF
E000FFE00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000FF
FFE0FFFFE0FFFFE0131E7D9D1A>108 D<7CE0E000FFFBF8007FFFF8001F1F1C001E1E1C001E1E
1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C
1C1C001C1C1C001C1C1C007F1F1F00FF9F9F807F1F1F00191580941A>I<FE3E00FEFF80FFFFC0
0FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E0
0E00E00E00E0FFE3FEFFE7FEFFE3FE17157F941A>I<01F00007FC001FFF003E0F803C07807803
C07001C0E000E0E000E0E000E0E000E0E000E0E000E0F001E07001C07803C03C07803E0F801FFF
0007FC0001F00013157D941A>I<FE3E00FEFF80FFFFE00FC1F00F80700F00380E00380E001C0E
001C0E001C0E001C0E001C0E001C0E001C0F00380F00780F80F00FC1E00FFFC00EFF800E3E000E
00000E00000E00000E00000E00000E00000E00000E0000FFE000FFE000FFE00016207F941A>I<
01F8E007FEE00FFFE01E07E03C03E07801E07001E0E000E0E000E0E000E0E000E0E000E0E000E0
E001E07001E07803E03C03E01E0FE00FFFE007FCE001F0E00000E00000E00000E00000E00000E0
0000E00000E00000E0000FFE000FFE000FFE17207E941A>I<7F83F0FF8FF87FBFFC03FC3C03F0
1803E00003C00003C0000380000380000380000380000380000380000380000380000380000380
007FFF00FFFF007FFF0016157E941A>I<07FB801FFF807FFF80780780E00380E00380E0038078
00007FC0003FFC0007FE00003F800007806001C0E001C0E001C0F003C0FC0780FFFF00EFFE00E3
F80012157C941A>I<00C00001C00001C00001C00001C00001C00001C0007FFFE0FFFFE0FFFFE0
01C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C07001C07001C070
01C07000E0E000FFE0007FC0001F00141C7F9B1A>I<FE0FE0FE0FE0FE0FE00E00E00E00E00E00
E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E01E00F03E007FF
FE03FFFE00FCFE17157F941A>I<FF83FEFFC7FEFF83FE3800383800381C00701C00701C00701C
38701C7C701C7C700E6CE00E6CE00EEEE00EEEE00EEEE00EC6E006C6C007C7C007C7C003838017
157F941A>119 D E /Fe 3 51 df<07C018303018701C600C600CE00EE00EE00EE00EE00EE00E
E00EE00EE00E600C600C701C30181C7007C00F157F9412>48 D<03000700FF0007000700070007
0007000700070007000700070007000700070007000700070007007FF00C157E9412>I<0F8030
E040708030C038E0384038003800700070006000C00180030006000C08080810183FF07FF0FFF0
0D157E9412>I E /Ff 1 111 df<71F09A189C18981818183030303030323062606460380F0B7E
8A13>110 D E /Fg 1 51 df<01FF8007FF800E0000180000300000600000600000600000C000
00C00000FFFF80FFFF80C00000C000006000006000006000003000001800000E000007FF8001FF
8011167D9218>50 D E /Fh 3 121 df<07FFF00000E01C0000E0060000E0070000E0070001C0
070001C0070001C0070001C00E0003801C000380700003FF80000380E000070070000700380007
003800070038000E0070000E0070000E0070800E0070801C003100FF801E0019177F961B>82
D<0300038003000000000000000000000000001C002400460046008C000C001800180018003100
3100320032001C0009177F960C>105 D<0F1F0011A18020C38020C30041800001800001800001
8000030000030200C30200E70400C5080078F000110E7F8D14>120 D E
/Fi 34 123 df<00000FE0000030180000E01C0001C03C0001803C000380380003800000038000
0007000000070000000700000007000000070000000E000000FFFFE0000E00E0000E00E0000E01
C0001C01C0001C01C0001C01C0001C0380001C0380003803800038038000380700003807000038
07000070070800700E1000700E1000700E1000700E2000E0062000E003C000E0000000E0000000
C0000001C0000001C0000071800000F1800000F3000000620000003C0000001E2D82A21B>12
D<0C06001E0F003F1F803F1F801D0E800201000201000201000402000402000804001008002010
00402000804000110F78A219>34 D<FFF0FFF0FFE00C037C8B11>45 D<00000008000000180000
00300000003000000060000000C0000000C0000001800000018000000300000006000000060000
000C0000000C0000001800000030000000300000006000000060000000C0000001800000018000
00030000000300000006000000060000000C000000180000001800000030000000300000006000
0000C0000000C0000001800000018000000300000006000000060000000C0000000C0000001800
000030000000300000006000000060000000C0000000C0000000800000001D317FA419>47
D<00FFFFE0000F0038000F001C000F001E001E000E001E000F001E000F001E000F003C000E003C
001E003C001E003C003C00780078007800F0007801E00078078000FFFF8000F001E000F000F000
F0007801E0007801E0003801E0003C01E0003C03C0007803C0007803C0007803C000F0078000F0
078001E0078003C0078007000F801E00FFFFF00020227DA122>66 D<00007F0080000380810000
0E00630000380027000070001F0000E0000E0001C0000E000380000E000700000E000F00000400
0E000004001E000004003C000004003C00000800780000000078000000007800000000F0000000
00F000000000F000000000F000000000F000000000E000000000E000002000E000002000E00000
4000E000004000F00000800070000080007000010000380002000018000400001C000800000600
3000000381C0000000FE000000212479A223>I<00FFFFF000000F003C00000F000E00000F0007
00001E000380001E000380001E0001C0001E0001C0003C0001C0003C0001E0003C0001E0003C00
01E000780001E000780001E000780001E000780001E000F00003C000F00003C000F00003C000F0
0003C001E000078001E000078001E000070001E0000F0003C0000E0003C0001C0003C0003C0003
C00038000780007000078000E000078001C00007800700000F801C0000FFFFF0000023227DA125
>I<00FFFFFF80000F000780000F000180000F000180001E000180001E000180001E000100001E
000100003C000100003C000100003C010100003C01000000780200000078020000007806000000
780E000000FFFC000000F00C000000F00C000000F00C000001E008000001E008000001E0080400
01E000080003C000080003C000080003C000100003C000100007800020000780006000078000C0
00078001C0000F8007C000FFFFFF800021227DA121>I<00FF000FFC000F8001E0000F80018000
0FC000800013C001000013C001000011E001000011E001000021E002000020F002000020F00200
0020F0020000407804000040780400004078040000403C040000803C080000803E080000801E08
0000801E080001001F100001000F100001000F10000100079000020007A000020007A000020003
E000020003E000040003C000040001C000040001C0000C0001C0001E00008000FFC00080002622
7DA124>78 D<0000FE0000078380000C00E0003800700070003800E0003801C0003C0380001C07
00001C0F00001E1E00001E1E00001E3C00001E3C00001E7800001E7800001E7800001EF000003C
F000003CF000003CF0000038F0000078E0000078E00000F0E00000F0E00001E0E00001C0E00003
C0F01E03807061070070810E0038811C001C8138000E81E0000783804001FD0040000100400001
80800001818000018100000387000001FE000001FE000001FC000000F0001F2D79A225>81
D<1FFFFFF81E03C0381803C0183003C01820078018200780184007801040078010400F0010800F
0010800F0010000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C000000
3C00000078000000780000007800000078000000F0000000F0000000F0000000F0000001E00000
01E0000001E0000001E0000003E00000FFFF00001D2277A123>84 D<00F8C00185C00705C00E03
800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E10F01C20701C
20703C20305C40308C400F078014157B9419>97 D<03C03F800380038003800700070007000700
0E000E000E000E001C001CF81D0C1E0E3C0638073807380F700F700F700F700FE01EE01EE01EE0
3CE038E038607060E031C01F0010237BA216>I<007E0001C1000301800703800E07801C07803C
0000380000780000780000780000F00000F00000F00000F00000F00100700100700200300C0018
30000FC00011157B9416>I<00003C0003F8000038000038000038000070000070000070000070
0000E00000E00000E00000E00001C000F9C00185C00705C00E03800E03801C03803C0380380700
780700780700780700F00E00F00E00F00E00F00E10F01C20701C20703C20305C40308C400F0780
16237BA219>I<00F803840E021C023C0238027804F018FFE0F000F000E000E000E000E000E002
E0026004701830600F800F157A9416>I<00003E0000470000CF00018F00018600038000038000
0380000700000700000700000700000700000E0000FFF0000E00000E00000E00001C00001C0000
1C00001C00001C0000380000380000380000380000380000700000700000700000700000700000
E00000E00000E00000E00000C00001C00001C000718000F18000F300006200003C0000182D82A2
0F>I<00F0000FE00000E00000E00000E00001C00001C00001C00001C000038000038000038000
038000070000071F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C0
380380380380380380380704700708700E08700E10700610E006206003C016237DA219>104
D<00C001E001C001C0000000000000000000000000000000001C00230043004300870087008700
0E000E001C001C001C00380038003840708070807080710032001C000B217BA00F>I<0000E000
01E00001E00000C0000000000000000000000000000000000000000000000000001E0000230000
4380008380008380010380010380000700000700000700000700000E00000E00000E00000E0000
1C00001C00001C00001C0000380000380000380000380000700000700000700070E000F0C000F1
80006300003C0000132B82A00F>I<01E01FC001C001C001C00380038003800380070007000700
07000E000E000E000E001C001C001C001C0038003800380038007000700070007100E200E200E2
00E200640038000B237CA20C>108 D<1C0F80F8002610C10C0047606606008780780700878078
0700870070070087007007000E00E00E000E00E00E000E00E00E000E00E00E001C01C01C001C01
C01C001C01C01C001C01C038203803803840380380704038038070803803803080700700310030
03001E0023157B9428>I<1C0F002631C04740C08780E08780E08700E08700E00E01C00E01C00E
01C00E01C01C03801C03801C03801C0704380708380E08380E103806107006203003C016157B94
1B>I<007E0001C3000381800701C00E01C01C01E03C01E03801E07801E07801E07801E0F003C0
F003C0F00380F00780700700700E00700C0030180018700007C00013157B9419>I<01C1F00262
1804741C08780C08700E08700E08701E00E01E00E01E00E01E00E01E01C03C01C03C01C03C01C0
7803807003807003C0E003C1C0072380071E000700000700000E00000E00000E00000E00001C00
001C00001C0000FFC000171F7F9419>I<1C1F002620804741C08783C08703C08701808700000E
00000E00000E00000E00001C00001C00001C00001C000038000038000038000038000070000030
000012157B9415>114 D<00FC000183000200800401800C03800C03000C00000F00000FF00007
FC0003FE00003E00000F00000700700700F00600F00600E004004008002030001FC00011157D94
14>I<00C001C001C001C001C003800380038003800700FFF8070007000E000E000E000E001C00
1C001C001C003800380038003810702070207040708031001E000D1F7C9E10>I<1E00602300E0
4380E04381C08381C08701C08701C00703800E03800E03800E03801C07001C07001C07001C0708
1C0E10180E101C0E101C1E200C262007C3C015157B941A>I<1E03802307C04387C04383C08381
C08700C08700C00700800E00800E00800E00801C01001C01001C01001C02001C02001C04001C08
001C08000C300003C00012157B9416>I<1E0060E02300E1F04380E1F04381C0F08381C0708701
C0308701C030070380200E0380200E0380200E0380201C0700401C0700401C0700401C0700801C
0700801C0701001C0F01000C0F020006138C0003E0F0001C157B9420>I<03C1E0046210083470
103CF02038F020386020380000700000700000700000700000E00000E00000E00000E02061C040
F1C040F1C080E2C100446200383C0014157D9416>I<1E00302300704380704380E08380E08700
E08700E00701C00E01C00E01C00E01C01C03801C03801C03801C03801C07001C07001C07001C0F
000C3E0003CE00000E00000E00001C00601C00F03800F03000E0600080C0004380003E0000141F
7B9418>I<01E02003F06007F8C0041F8008010008020000040000080000100000200000400000
80000100000200000400800801001003003F060061FC0040F80080700013157D9414>I
E /Fj 5 104 df<FFFFFFFCFFFFFFFC1E027C8C27>0 D<03F0000FFC001FFE003FFF007FFF807F
FF80FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC07FFF807FFF803FFF001FFE000F
FC0003F00012147D9519>15 D<C0000000F00000003C0000000F00000003C0000000F00000003C
0000000F80000003E0000000780000001E0000000780000001E0000000780000001C0000007800
0001E00000078000001E00000078000003E000000F8000003C000000F0000003C000000F000000
3C00000070000000C0000000000000000000000000000000000000000000000000000000000000
00000000007FFFFFF8FFFFFFFC1E277C9F27>21 D<000F0038007000E001C001C001C001C001C0
01C001C001C001C001C001C001C001C001C001C001C001C0038007001E00F0001E000700038001
C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C000E000700038
000F10317CA419>102 D<F0001E000700038001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C001C001C000E000700038000F0038007000E001C001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C001C0038007001E00F00010317CA419>I
E /Fk 10 121 df<70F8F8F87005057C840E>58 D<70F8FCFC7404040404080810102040060F7C
840E>I<00007F00800003808100000E00630000380027000070001F0000E0000E0001C0000E00
0380000E000700000E000F000004000E000004001E000004003C000004003C0000080078000000
0078000000007800000000F000000000F000000000F000000000F000000000F000000000E00000
0000E000002000E000002000E000004000E000004000F000008000700000800070000100003800
02000018000400001C0008000006003000000381C0000000FE00000021247DA223>67
D<00001E00000063800000C7800001C7800001C300000180000003800000038000000380000003
80000007000000070000000700000007000000FFF800000E0000000E0000000E0000000E000000
0E0000000E0000001C0000001C0000001C0000001C0000001C0000003800000038000000380000
0038000000380000007000000070000000700000007000000060000000E0000000E0000000E000
0000C0000070C00000F1800000F1000000620000003C000000192D7EA218>102
D<000F0C00389C00605C00C03801C0380380380780380700700F00700F00700F00701E00E01E00
E01E00E01E00E01E01C00E01C00E03C00605C0031B8001E3800003800003800007000007000007
00700E00F00C00F018006070003FC000161F809417>I<00F0000FE00000E00000E00000E00001
C00001C00001C00001C000038000038000038000038000070000071F0007218007C0C00F00E00F
00E00E00E00E00E01C01C01C01C01C01C01C01C0380380380380380700380704700708700E0870
0E08700610E006206003C016237DA21C>I<00E000E001E000C000000000000000000000000000
00000000001E0023004380438083808380870007000E000E000E001C001C003800382038407040
7040308031001E000B227EA111>I<3C07E01F00461830618047201880C087401D00E087801E00
E087801C00E087001C00E00E003801C00E003801C00E003801C00E003801C01C007003801C0070
03801C007007001C007007043800E007083800E00E083800E00E083800E006107001C006203000
C003C026157E942B>109 D<03C0F004631C04740E08780E08700708700708700F00E00F00E00F
00E00F00E00F01C01E01C01E01C01E01C03C03803803803803C07003C0E0072180071E00070000
0700000E00000E00000E00000E00001C00001C00001C0000FFC000181F819418>112
D<01E0F006310C081A1C101A3C201C3C201C18201C000038000038000038000038000070000070
0000700000700860E010F0E010F0E020E170404230803C1F0016157E941C>120
D E /Fl 33 123 df<FFFF80FFFF80FFFF80FFFF80FFFF80FFFF8011067F9017>45
D<1C003E007F00FF80FF80FF807F003E001C0009097B8813>I<000E00001E00007E0007FE00FF
FE00FFFE00F8FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000
FE0000FE0000FE0000FE0000FE0000FE007FFFFE7FFFFE7FFFFE17277BA622>49
D<00FF800003FFF0000FFFFC001F03FE003800FF007C007F80FE003FC0FF003FC0FF003FE0FF00
1FE0FF001FE07E001FE03C003FE000003FE000003FC000003FC000007F8000007F000000FE0000
00FC000001F8000003F0000003E00000078000000F0000001E0000003C00E0007000E000E000E0
01C001C0038001C0070001C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF80FFFFFF80FFFFFF
801B277DA622>I<007F800003FFF00007FFFC000F81FE001F00FF003F80FF003F807F803F807F
803F807F801F807F800F007F800000FF000000FF000000FE000001FC000001F8000007F00000FF
C00000FFF0000001FC0000007E0000007F0000007F8000003FC000003FC000003FE000003FE03C
003FE07E003FE0FF003FE0FF003FE0FF003FC0FF007FC07E007F807C007F003F01FE001FFFFC00
07FFF00000FF80001B277DA622>I<00000E0000001E0000003E0000007E000000FE000000FE00
0001FE000003FE0000077E00000E7E00000E7E00001C7E0000387E0000707E0000E07E0000E07E
0001C07E0003807E0007007E000E007E000E007E001C007E0038007E0070007E00E0007E00FFFF
FFF8FFFFFFF8FFFFFFF80000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE00007FFFF8007FFFF8007FFFF81D277EA622>I<0C0003000F803F000FFFFE000FFFFC000F
FFF8000FFFF0000FFFE0000FFFC0000FFE00000E0000000E0000000E0000000E0000000E000000
0E0000000E7FC0000FFFF8000F80FC000E003E000C003F0000001F8000001FC000001FC000001F
E000001FE018001FE07C001FE0FE001FE0FE001FE0FE001FE0FE001FC0FC001FC078003F807800
3F803C007F001F01FE000FFFF80003FFF00000FF80001B277DA622>I<00003FF001800003FFFE
0380000FFFFF8780003FF007DF8000FF8001FF8001FE00007F8003FC00003F8007F000001F800F
F000000F801FE0000007801FE0000007803FC0000007803FC0000003807FC0000003807F800000
03807F8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF
8000000000FF8000000000FF8000000000FF80000000007F80000000007F80000000007FC00000
03803FC0000003803FC0000003801FE0000003801FE0000007000FF00000070007F000000E0003
FC00001E0001FE00003C0000FF8000F800003FF007E000000FFFFFC0000003FFFF000000003FF8
000029297CA832>67 D<FFFFFFFFE0FFFFFFFFE0FFFFFFFFE003FC001FE003FC0007F003FC0001
F003FC0001F003FC0000F003FC00007003FC00007003FC00007003FC01C07803FC01C03803FC01
C03803FC01C03803FC03C00003FC03C00003FC0FC00003FFFFC00003FFFFC00003FFFFC00003FC
0FC00003FC03C00003FC03C00003FC01C00E03FC01C00E03FC01C00E03FC01C01C03FC00001C03
FC00001C03FC00001C03FC00003C03FC00003803FC00007803FC0000F803FC0001F803FC0003F8
03FC001FF8FFFFFFFFF0FFFFFFFFF0FFFFFFFFF027297DA82D>69 D<FFFFFCFFFFFCFFFFFC01FE
0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE
0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE
0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00FFFFFCFFFFFCFFFFFC16297EA81A
>73 D<0000FFE000000007FFFC0000003FC07F8000007F001FC00001FC0007F00003F80003F800
07F00001FC000FF00001FE001FE00000FF001FE00000FF003FC000007F803FC000007F807FC000
007FC07F8000003FC07F8000003FC07F8000003FC0FF8000003FE0FF8000003FE0FF8000003FE0
FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000
003FE07F8000003FC07FC000007FC07FC000007FC03FC000007F803FC000007F801FE00000FF00
1FE00000FF000FF00001FE0007F00001FC0003F80003F80001FC0007F00000FF001FE000003FC0
7F8000000FFFFE00000000FFE000002B297CA834>79 D<FFFFFFF800FFFFFFFF00FFFFFFFFC003
FC003FE003FC000FF003FC0007F803FC0007FC03FC0003FC03FC0003FE03FC0003FE03FC0003FE
03FC0003FE03FC0003FE03FC0003FE03FC0003FE03FC0003FC03FC0007FC03FC0007F803FC000F
F003FC003FE003FFFFFF8003FFFFFE0003FC00000003FC00000003FC00000003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC
00000003FC00000003FC00000003FC000000FFFFF00000FFFFF00000FFFFF0000027297DA82F>
I<007F806003FFF0E007FFF9E00F807FE01F001FE03E0007E07C0003E07C0001E0FC0001E0FC00
01E0FC0000E0FE0000E0FE0000E0FF000000FFC000007FFE00007FFFE0003FFFFC001FFFFE000F
FFFF8007FFFFC003FFFFE000FFFFE00007FFF000007FF000000FF8000007F8000003F8600001F8
E00001F8E00001F8E00001F8F00001F0F00001F0F80003F0FC0003E0FF0007C0FFE01F80F3FFFF
00E0FFFE00C01FF0001D297CA826>83 D<01FF800007FFF0000F81F8001FC07E001FC07E001FC0
3F000F803F8007003F8000003F8000003F8000003F80000FFF8000FFFF8007FC3F800FE03F803F
803F803F003F807F003F80FE003F80FE003F80FE003F80FE003F807E007F807F00DF803F839FFC
0FFF0FFC01FC03FC1E1B7E9A21>97 D<FFE0000000FFE0000000FFE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0
0000000FE00000000FE00000000FE1FE00000FE7FF80000FFE07E0000FF801F0000FF000F8000F
E000FC000FE000FE000FE0007F000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F80
0FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE0007F000FE0007F000FE000FE
000FE000FC000FF001F8000FF803F0000F9E07E0000F07FF80000E01FC0000212A7EA926>I<00
1FF80000FFFE0003F01F0007E03F800FC03F801F803F803F801F007F800E007F0000007F000000
FF000000FF000000FF000000FF000000FF000000FF000000FF0000007F0000007F0000007F8000
003F8001C01F8001C00FC0038007E0070003F01E0000FFFC00001FE0001A1B7E9A1F>I<00003F
F80000003FF80000003FF800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F800000003F800000003F800001FE3F80000
FFFBF80003F03FF80007E00FF8000FC007F8001F8003F8003F8003F8007F0003F8007F0003F800
7F0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8
007F0003F8007F0003F8007F0003F8003F8003F8001F8003F8000F8007F80007C00FF80003F03B
FF8000FFF3FF80003FC3FF80212A7EA926>I<003FE00001FFF80003F07E0007C01F000F801F80
1F800F803F800FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FF0000
00FF000000FF0000007F0000007F0000007F0000003F8000E01F8000E00FC001C007E0038003F8
1F0000FFFE00001FF0001B1B7E9A20>I<00FF81F003FFE7F80FC1FE7C1F80FC7C1F007C383F00
7E107F007F007F007F007F007F007F007F007F007F007F007F003F007E001F007C001F80FC000F
C1F8001FFFE00018FF800038000000380000003C0000003E0000003FFFF8001FFFFF001FFFFF80
0FFFFFC007FFFFE01FFFFFF03E0007F07C0001F8F80000F8F80000F8F80000F8F80000F87C0001
F03C0001E01F0007C00FC01F8003FFFE00007FF0001E287E9A22>103 D<07000FC01FE03FE03F
E03FE01FE00FC007000000000000000000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F
2B7DAA14>105 D<000700000F80001FC0003FE0003FE0003FE0001FC0000F8000070000000000
000000000000000000000000000000000001FFE001FFE001FFE0000FE0000FE0000FE0000FE000
0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000
0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE07C0FE0FE0FE0FE
0FC0FE1F80FE1F007C3E003FFC000FF000133784AA15>I<FFE0FFE0FFE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>108
D<FFC07F800FF000FFC1FFE03FFC00FFC383F0707E000FC603F8C07F000FCC01F9803F000FD801
FF003F800FF001FE003F800FF001FE003F800FE001FC003F800FE001FC003F800FE001FC003F80
0FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC
003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800F
E001FC003F800FE001FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A
>I<FFC07F0000FFC1FFC000FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F8000FF0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F800FFFE3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003F07E00
0FC01F801F800FC03F800FE03F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007
F8FF0007F8FF0007F8FF0007F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F80
0FC00FC01F8007F07F0001FFFC00003FE0001D1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0
000FF803F0000FF001F8000FE000FC000FE000FE000FE000FF000FE0007F000FE0007F000FE000
7F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE0
00FF000FE000FF000FE000FE000FE001FC000FF001F8000FF803F0000FFE0FE0000FE7FF80000F
E1FC00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000000
0FE00000000FE0000000FFFE000000FFFE000000FFFE00000021277E9A26>I<FFC1F0FFC7FCFF
CE3E0FD87F0FD87F0FF07F0FF03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A
1C>114 D<03FE300FFFF01E03F03800F0700070F00070F00070F80070FC0000FFE0007FFE007F
FF803FFFE01FFFF007FFF800FFF80003FC0000FC60007CE0003CF0003CF00038F80038FC0070FF
01E0F7FFC0C1FF00161B7E9A1B>I<00700000700000700000700000F00000F00000F00001F000
03F00003F00007F0001FFFF0FFFFF0FFFFF007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F00007F03807F03807F03807F03807F03807F03803F038
03F87001F86000FFC0001F8015267FA51B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE007F80007E007F80007E00FF80003F03BFF8001FFF3FF80003FC3FF80211B
7D9A26>I<FFFC0FFF00FFFC0FFF00FFFC0FFF0007F003C00003F807800001FC07800000FE0F00
0000FF1E0000007F3C0000003FF80000001FF00000000FF00000000FF000000007F000000007F8
0000000FFC0000001FFE0000001EFE0000003C7F000000783F800000F01FC00001E01FE00001C0
0FE00003C007F000FFF01FFF80FFF01FFF80FFF01FFF80211B7F9A24>120
D<FFFE03FF80FFFE03FF80FFFE03FF8007F000700007F000700007F800F00003F800E00003FC01
E00001FC01C00001FC01C00000FE03800000FE038000007F070000007F070000007F8F0000003F
8E0000003FDE0000001FDC0000001FDC0000000FF80000000FF80000000FF800000007F0000000
07F000000003E000000003E000000001C000000001C00000000380000000038000003807800000
7C07000000FE0F000000FE0E000000FE1E000000FE3C0000007C780000003FE00000000FC00000
0021277F9A24>I<3FFFFF803FFFFF803F007F003C00FE003801FE007803FC007803F8007007F8
00700FF000700FE000001FC000003FC000007F8000007F000000FF000001FE038001FC038003F8
038007F803800FF007800FE007801FE007003FC00F003F801F007F007F00FFFFFF00FFFFFF0019
1B7E9A1F>I E /Fm 58 123 df<000FFF00007FFF0001F83F0003E03F0007C03F000F803F000F
801F000F801F000F801F000F801F000F801F000F801F000F801F00FFFFFF00FFFFFF000F801F00
0F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F
000F801F000F801F000F801F000F801F000F801F000F801F000F801F007FF0FFE07FF0FFE01B23
7FA21F>13 D<00180030006000C001C00380070007000E001E001C003C003C003C007800780078
007800F800F000F000F000F000F000F000F000F000F000F000F000F80078007800780078003C00
3C003C001C001E000E0007000700038001C000C00060003000180D317BA416>40
D<C0006000300018001C000E0007000700038003C001C001E001E001E000F000F000F000F000F8
0078007800780078007800780078007800780078007800F800F000F000F000F001E001E001E001
C003C00380070007000E001C00180030006000C0000D317DA416>I<0000700000000070000000
007000000000700000000070000000007000000000700000000070000000007000000000700000
0000700000000070000000007000000000700000000070000000007000000000700000FFFFFFFF
F8FFFFFFFFF8FFFFFFFFF800007000000000700000000070000000007000000000700000000070
000000007000000000700000000070000000007000000000700000000070000000007000000000
70000000007000000000700000000070000025257D9E2C>43 D<FFFCFFFCFFFCFFFC0E047F8C13
>45 D<387CFEFEFE7C3807077C8610>I<00FE0007FFC00F83E01F01F03E00F83E00F87C007C7C
007C7C007CFC007CFC007EFC007EFC007EFC007EFC007EFC007EFC007EFC007EFC007EFC007EFC
007EFC007EFC007E7C007C7C007C7C007C3E00F83E00F81F01F00F83E007FFC000FE0017207E9F
1C>48 D<00180000780001F800FFF800FFF80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F8007FFFE07FFFE013207C9F1C>I<03FC000FFF003C1FC070
07E07C07F0FE03F0FE03F8FE03F8FE01F87C01F83803F80003F80003F00003F00007E00007C000
0F80001F00003E0000380000700000E01801C0180380180700180E00380FFFF01FFFF03FFFF07F
FFF0FFFFF0FFFFF015207D9F1C>I<00FE0007FFC00F07E01E03F03F03F03F81F83F81F83F81F8
1F03F81F03F00003F00003E00007C0001F8001FE0001FF000007C00001F00001F80000FC0000FC
3C00FE7E00FEFF00FEFF00FEFF00FEFF00FC7E01FC7801F81E07F00FFFC001FE0017207E9F1C>
I<0000E00001E00003E00003E00007E0000FE0001FE0001FE00037E00077E000E7E001C7E00187
E00307E00707E00E07E00C07E01807E03807E07007E0E007E0FFFFFEFFFFFE0007E00007E00007
E00007E00007E00007E00007E000FFFE00FFFE17207E9F1C>I<1000201E01E01FFFC01FFF801F
FF001FFE001FF8001BC00018000018000018000018000019FC001FFF001E0FC01807E01803E000
03F00003F00003F80003F83803F87C03F8FE03F8FE03F8FC03F0FC03F07007E03007C01C1F800F
FF0003F80015207D9F1C>I<001F8000FFE003F07007C0F00F01F81F01F83E01F83E01F87E00F0
7C00007C0000FC0800FC7FC0FCFFE0FD80F0FF00F8FE007CFE007CFC007EFC007EFC007EFC007E
7C007E7C007E7C007E3C007C3E007C1E00F80F00F00783E003FFC000FF0017207E9F1C>I<6000
007800007FFFFE7FFFFE7FFFFC7FFFF87FFFF87FFFF0E00060E000C0C00180C00300C003000006
00000C00001C0000180000380000780000780000F00000F00000F00001F00001F00001F00003F0
0003F00003F00003F00003F00003F00003F00001E00017227DA11C>I<00FE0003FFC00703E00E
00F01C00F01C00783C00783E00783F00783F80783FE0F01FF9E01FFFC00FFF8007FFC003FFE007
FFF01E7FF83C1FFC7807FC7801FEF000FEF0003EF0001EF0001EF0001CF8001C7800383C00381F
01F00FFFC001FF0017207E9F1C>I<387CFEFEFE7C380000000000000000387CFEFEFE7C380716
7C9510>58 D<000070000000007000000000F800000000F800000000F800000001FC00000001FC
00000003FE00000003FE00000003FE00000006FF000000067F0000000E7F8000000C3F8000000C
3F800000183FC00000181FC00000381FE00000300FE00000300FE00000600FF000006007F00000
E007F80000FFFFF80000FFFFF800018001FC00018001FC00038001FE00030000FE00030000FE00
0600007F000600007F00FFE00FFFF8FFE00FFFF825227EA12A>65 D<FFFFFF8000FFFFFFE00007
F001F80007F000FC0007F0007E0007F0007E0007F0007F0007F0007F0007F0007F0007F0007F00
07F0007F0007F0007E0007F000FE0007F000FC0007F003F80007FFFFF00007FFFFF00007F001FC
0007F0007E0007F0003F0007F0003F8007F0001F8007F0001FC007F0001FC007F0001FC007F000
1FC007F0001FC007F0001FC007F0003F8007F0003F8007F0007F0007F001FE00FFFFFFF800FFFF
FFC00022227EA128>I<0003FE0080001FFF818000FF01E38001F8003F8003E0001F8007C0000F
800F800007801F800007803F000003803F000003807F000001807E000001807E00000180FE0000
0000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E00
0000007E000001807F000001803F000001803F000003801F800003000F8000030007C000060003
F0000C0001F800380000FF00F000001FFFC0000003FE000021227DA128>I<FFFFFFFCFFFFFFFC
07F000FC07F0003C07F0001C07F0000C07F0000E07F0000E07F0000607F0180607F0180607F018
0607F0180007F0380007F0780007FFF80007FFF80007F0780007F0380007F0180007F0180007F0
180307F0180307F0000307F0000607F0000607F0000607F0000E07F0000E07F0001E07F0003E07
F001FCFFFFFFFCFFFFFFFC20227EA125>69 D<FFFFFFF8FFFFFFF807F001F807F0007807F00038
07F0001807F0001C07F0001C07F0000C07F0000C07F0180C07F0180C07F0180007F0180007F038
0007F0780007FFF80007FFF80007F0780007F0380007F0180007F0180007F0180007F0180007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F00000FFFFE000FFFFE0001E
227EA123>I<0003FE0040001FFFC0C0007F00F1C001F8003FC003F0000FC007C00007C00FC000
03C01F800003C03F000001C03F000001C07F000000C07E000000C07E000000C0FE00000000FE00
000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000FFFFC7E000FFFFC7F
00001FC07F00001FC03F00001FC03F00001FC01F80001FC00FC0001FC007E0001FC003F0001FC0
01FC003FC0007F80E7C0001FFFC3C00003FF00C026227DA12C>I<FFFFE0FFFFE003F80003F800
03F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F800
03F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F800
03F80003F800FFFFE0FFFFE013227FA115>73 D<FFFFE000FFFFE00007F0000007F0000007F000
0007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0001807F0001807F0001807
F0001807F0003807F0003807F0007007F0007007F000F007F001F007F007F0FFFFFFF0FFFFFFF0
1D227EA122>76 D<FFF000000FFFFFF800001FFF07F800001FE006FC000037E006FC000037E006
FC000037E0067E000067E0067E000067E0063F0000C7E0063F0000C7E0061F800187E0061F8001
87E0060FC00307E0060FC00307E0060FC00307E00607E00607E00607E00607E00603F00C07E006
03F00C07E00601F81807E00601F81807E00601F81807E00600FC3007E00600FC3007E006007E60
07E006007E6007E006003FC007E006003FC007E006001F8007E006001F8007E006001F8007E006
000F0007E0FFF00F00FFFFFFF00600FFFF30227EA135>I<FFF8001FFEFFFC001FFE07FC0000C0
07FE0000C006FF0000C0067F8000C0063FC000C0061FE000C0060FE000C0060FF000C00607F800
C00603FC00C00601FE00C00600FE00C00600FF00C006007F80C006003FC0C006001FE0C006000F
F0C0060007F0C0060007F8C0060003FCC0060001FEC0060000FFC00600007FC00600007FC00600
003FC00600001FC00600000FC006000007C006000003C006000003C0FFF00001C0FFF00000C027
227EA12C>I<0007FC0000003FFF800000FC07E00003F001F80007E000FC000FC0007E001F8000
3F001F80003F003F00001F803F00001F807F00001FC07E00000FC07E00000FC0FE00000FE0FE00
000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE07E
00000FC07F00001FC07F00001FC03F00001F803F80003F801F80003F000FC0007E0007E000FC00
03F001F80000FC07E000003FFF80000007FC000023227DA12A>I<FFFFFF00FFFFFFE007F007F0
07F001FC07F000FC07F0007E07F0007E07F0007F07F0007F07F0007F07F0007F07F0007F07F000
7E07F0007E07F000FC07F001FC07F007F007FFFFE007FFFF0007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000FF
FF8000FFFF800020227EA126>I<0007FC0000003FFF800000FC07E00003F001F80007E000FC00
0FC0007E001F80003F001F80003F003F00001F803F00001F807F00001FC07E00000FC07E00000F
C0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE07E00000FC07F00001FC07F00001FC03F00001F803F81F03F801F83F83F000FC7
0C7E0007E606FC0003F607F80000FF07E000003FFF80000007FF80200000038020000001C02000
0001E0E0000001FFE0000001FFC0000000FFC0000000FFC00000007F800000007F000000001E00
232C7DA12A>I<FFFFFE0000FFFFFFC00007F007F00007F001F80007F000FC0007F0007E0007F0
007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FC0007
F001F80007F007F00007FFFFC00007FFFF800007F00FE00007F007F00007F003F80007F001FC00
07F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC
0607F000FE0607F000FF0CFFFF803FF8FFFF800FF027227EA12A>I<01FC0407FF8C1F03FC3C00
7C7C003C78001C78001CF8000CF8000CFC000CFC0000FF0000FFE0007FFF007FFFC03FFFF01FFF
F80FFFFC03FFFE003FFE0003FF00007F00003F00003FC0001FC0001FC0001FE0001EE0001EF000
3CFC003CFF00F8C7FFE080FF8018227DA11F>I<7FFFFFFF807FFFFFFF807E03F80F807803F807
807003F803806003F80180E003F801C0E003F801C0C003F800C0C003F800C0C003F800C0C003F8
00C00003F800000003F800000003F800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F8000003FFFFF80003FFFFF80022227EA127
>I<FFFF800FFEFFFF800FFE07F00000C007F80000C003F800018003F800018001FC00030001FC
00030001FE00070000FE00060000FF000600007F000C00007F800C00003F801800003F80180000
3FC03800001FC03000001FE03000000FE06000000FF060000007F0C0000007F0C0000007F9C000
0003F980000003FD80000001FF00000001FF00000000FE00000000FE00000000FE000000007C00
0000007C00000000380000000038000027227FA12A>86 D<07FC001FFF803F07C03F03E03F01E0
3F01F01E01F00001F00001F0003FF003FDF01FC1F03F01F07E01F0FC01F0FC01F0FC01F0FC01F0
7E02F07E0CF81FF87F07E03F18167E951B>97 D<FF000000FF0000001F0000001F0000001F0000
001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0FE0001F3F
F8001FF07C001F801E001F001F001F000F801F000F801F000FC01F000FC01F000FC01F000FC01F
000FC01F000FC01F000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C3FF800
180FC0001A237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC
0000FC0000FC0000FC0000FC00007C00007E00007E00003E00301F00600FC0E007FF8000FE0014
167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E0000003E0000
003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE001F007E003E003E00
7E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC003E
007C003E007C003E003E007E001E00FE000F83BE0007FF3FC001FC3FC01A237EA21F>I<00FE00
07FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00F8FFFFF8FFFFF8FC0000FC0000FC0000
7C00007C00007E00003E00181F00300FC07003FFC000FF0015167E951A>I<003F8000FFC001E3
E003C7E007C7E00F87E00F83C00F80000F80000F80000F80000F80000F8000FFFC00FFFC000F80
000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80
000F80000F80000F80000F80007FF8007FF80013237FA211>I<03FC1E0FFF7F1F0F8F3E07CF3C
03C07C03E07C03E07C03E07C03E07C03E03C03C03E07C01F0F801FFF0013FC0030000030000038
00003FFF801FFFF00FFFF81FFFFC3800FC70003EF0001EF0001EF0001EF0001E78003C7C007C3F
01F80FFFE001FF0018217E951C>I<FF000000FF0000001F0000001F0000001F0000001F000000
1F0000001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF8001F307C
001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1FFC01A
237EA21F>I<1C003F007F007F007F003F001C000000000000000000000000000000FF00FF001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE0
0B247EA310>I<0038007C00FE00FE00FE007C0038000000000000000000000000000003FE03FE
003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E00
3E003E003E003E783EFC3EFC3CFC7C78F87FE01F800F2E83A311>I<FF000000FF0000001F0000
001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F00
00001F00FF801F00FF801F0038001F0060001F01C0001F0380001F0700001F0E00001F1C00001F
7E00001FFF00001FCF00001F0F80001F07C0001F03E0001F01E0001F01F0001F00F8001F007C00
1F003C00FFE0FFC0FFE0FFC01A237EA21E>I<FF00FF001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F00FFE0FFE00B237EA210>I<FF07F007F000FF1FFC1FFC001F303E303E001F403E
403E001F801F801F001F801F801F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>
I<FF07E000FF1FF8001F307C001F403C001F803E001F803E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F
003E00FFE1FFC0FFE1FFC01A167E951F>I<00FE0007FFC00F83E01E00F03E00F87C007C7C007C
7C007CFC007EFC007EFC007EFC007EFC007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E0
07FFC000FE0017167E951C>I<FF0FE000FF3FF8001FF07C001F803E001F001F001F001F801F00
1F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F001F801F
001F801F803F001FC03E001FE0FC001F3FF8001F0FC0001F0000001F0000001F0000001F000000
1F0000001F0000001F0000001F000000FFE00000FFE000001A207E951F>I<FE1F00FE3FC01E67
E01EC7E01E87E01E87E01F83C01F00001F00001F00001F00001F00001F00001F00001F00001F00
001F00001F00001F00001F0000FFF000FFF00013167E9517>114 D<0FF3003FFF00781F006007
00E00300E00300F00300FC00007FE0007FF8003FFE000FFF0001FF00000F80C00780C00380E003
80E00380F00700FC0E00EFFC00C7F00011167E9516>I<01800001800001800001800003800003
80000780000780000F80003F8000FFFF00FFFF000F80000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F81800F81800F81800F81800F81800F830007C30003FE0000
F80011207F9F16>I<FF01FE00FF01FE001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F
007E001F00FE000F81BE0007FF3FC001FC3FC01A167E951F>I<FFE01FE0FFE01FE00F8006000F
8006000FC00E0007C00C0007E01C0003E0180003E0180001F0300001F0300000F8600000F86000
007CC000007CC000007FC000003F8000003F8000001F0000001F0000000E0000000E00001B167F
951E>I<FFE7FF07F8FFE7FF07F81F007800C00F807801800F807C01800F807C018007C07E0300
07C0DE030007E0DE070003E0DF060003E18F060001F18F0C0001F38F8C0001FB079C0000FB07D8
0000FE03D800007E03F000007E03F000007C01F000003C01E000003800E000001800C00025167F
9528>I<FFE07FC0FFE07FC00F801C0007C0380003E0700003F0600001F8C00000F98000007F80
00003F0000001F0000001F8000003FC0000037C0000063E00000C1F00001C0F8000380FC000700
7E000E003E00FF80FFE0FF80FFE01B167F951E>I<FFE01FE0FFE01FE00F8006000F8006000FC0
0E0007C00C0007E01C0003E0180003E0180001F0300001F0300000F8600000F86000007CC00000
7CC000007FC000003F8000003F8000001F0000001F0000000E0000000E0000000C0000000C0000
0018000078180000FC380000FC300000FC60000069C000007F8000001F0000001B207F951E>I<
7FFFF07FFFF07C03E07007C0600FC0E01F80C01F00C03E00C07E0000FC0000F80001F00003F030
07E03007C0300F80701F80703F00603E00E07C03E0FFFFE0FFFFE014167E9519>I
E /Fn 81 124 df<001F83E000706E3000C07C780180F8780380F0780700700007007000070070
00070070000700700007007000070070000700700007007000FFFFFFC007007000070070000700
700007007000070070000700700007007000070070000700700007007000070070000700700007
0070000700700007007000070070000700700007007000070078007FE3FF801D2380A21C>11
D<001FC0000070200000C010000180380003807800070078000700300007000000070000000700
000007000000070000000700000007000000FFFFF8000700780007003800070038000700380007
003800070038000700380007003800070038000700380007003800070038000700380007003800
07003800070038000700380007003800070038007FE1FF80192380A21B>I<000FC07F00007031
C08000E00B004001801E00E003803E01E007003C01E007001C00C007001C000007001C00000700
1C000007001C000007001C000007001C000007001C0000FFFFFFFFE007001C01E007001C00E007
001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E0
07001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00
E007001C00E07FF1FFCFFE272380A229>14 D<7038F87CFC7EFC7E743A04020402040204020804
080410081008201040200F0F7EA218>34 D<003C000000006200000000C2000000018100000001
810000000381000000038100000003810000000381000000038200000003820000000384000000
038800000001C800000001D000000001E003FF8001C0007C0000E000380001E000300001F00020
00027000400004700040000838008000183C008000301C010000701E020000700E020000F00704
0000F007880000F003880000F001D00100F000E0010078007003003800B802003C031C04000E0C
0E0C0003F003F00021257EA326>38 D<70F8FCFC7404040404080810102040060F7CA20E>I<00
200040008001000300060004000C000C00180018003000300030007000600060006000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000600060006000700030003000300018
0018000C000C0004000600030001000080004000200B327CA413>I<800040002000100018000C
000400060006000300030001800180018001C000C000C000C000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000C000C000C001C0018001800180030003000600060004000C
00180010002000400080000B327DA413>I<000180000001800000018000000180000001800000
018000000180000001800000018000000180000001800000018000000180000001800000018000
00018000FFFFFFFEFFFFFFFE000180000001800000018000000180000001800000018000000180
000001800000018000000180000001800000018000000180000001800000018000000180001F22
7D9C26>43 D<70F8FCFC7404040404080810102040060F7C840E>I<FFE0FFE00B027F8B10>I<70
F8F8F87005057C840E>I<00008000018000018000030000030000030000060000060000060000
0C00000C00000C0000180000180000180000300000300000300000600000600000600000C00000
C00000C0000180000180000180000180000300000300000300000600000600000600000C00000C
00000C0000180000180000180000300000300000300000600000600000600000C00000C00000C0
000011317DA418>I<01F000071C000C06001803003803803803807001C07001C07001C07001C0
F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0
F001E07001C07001C07001C07803C03803803803801C07000C0600071C0001F00013227EA018>
I<008003800F80F380038003800380038003800380038003800380038003800380038003800380
03800380038003800380038003800380038003800380038007C0FFFE0F217CA018>I<03F0000C
1C001007002007804003C04003C08003E0F003E0F801E0F801E0F801E02003E00003E00003C000
03C0000780000700000E00001C0000180000300000600000C00001800001000002002004002008
00201800603000403FFFC07FFFC0FFFFC013217EA018>I<03F8000C1E001007002007804007C0
7807C07803C07807C03807C0000780000780000700000F00000E0000380003F000001C00000F00
0007800007800003C00003C00003E02003E07003E0F803E0F803E0F003C04003C0400780200780
100F000C1C0003F00013227EA018>I<000200000600000E00000E00001E00001E00002E00004E
00004E00008E00008E00010E00020E00020E00040E00040E00080E00100E00100E00200E00200E
00400E00800E00FFFFF8000E00000E00000E00000E00000E00000E00000E00001F0001FFF01521
7FA018>I<1000801E07001FFF001FFE001FF80013E00010000010000010000010000010000010
000010F800130E001407001803801003800001C00001C00001E00001E00001E00001E07001E0F0
01E0F001E0E001C08001C04003C04003802007001006000C1C0003F00013227EA018>I<007E00
01C1000300800601C00E03C01C03C0180180380000380000780000700000700000F0F800F30C00
F40600F40300F80380F801C0F001C0F001E0F001E0F001E0F001E0F001E07001E07001E07001E0
3801C03801C01803801C03000C0600070C0001F00013227EA018>I<4000006000007FFFE07FFF
C07FFFC0400080C001008001008002008002000004000008000008000010000030000020000060
0000600000600000E00000C00000C00001C00001C00001C00001C00003C00003C00003C00003C0
0003C00003C00003C00003C00001800013237DA118>I<01F800060E0008030010018020018020
00C06000C06000C06000C07000C07801803E01003F02001FC4000FF80003F80003FC00067F0008
3F80100F803007C06001C06000E0C000E0C00060C00060C00060C000606000406000C030008018
03000E0E0003F00013227EA018>I<01F000060C000C0600180700380380700380700380F001C0
F001C0F001C0F001E0F001E0F001E0F001E0F001E07001E07003E03803E01805E00C05E00619E0
03E1E00001C00001C00001C0000380000380300300780700780600700C002018001030000FC000
13227EA018>I<70F8F8F870000000000000000000000070F8F8F87005157C940E>I<70F8F8F870
000000000000000000000070F8F8F87808080808101010204040051F7C940E>I<FFFFFFFEFFFF
FFFE0000000000000000000000000000000000000000000000000000000000000000FFFFFFFEFF
FFFFFE1F0C7D9126>61 D<07E01838201C400E800FF00FF00FF00F000F000E001C003800300060
00C000C000800080018001000100010001000100010000000000000000000000038007C007C007
C0038010237DA217>63 D<000FE00000701C000080020003000180040000400800002008000020
1007C01020183008203008084060040440C0078441C0038481C003828380038283800382838003
828380038283800382838003828380038281C0038241C0038240C007824060078420300B842018
31881007C0F00800000008000000040000000300000E00800078007007C0000FFC001F237DA226
>I<0001800000018000000180000003C0000003C0000003C0000005E0000005E000000DF00000
08F0000008F0000010F800001078000010780000203C0000203C0000203C0000401E0000401E00
00401E0000800F0000800F0000FFFF000100078001000780030007C0020003C0020003C0040003
E0040001E0040001E00C0000F00C0000F03E0001F8FF800FFF20237EA225>I<FFFFF8000F800E
0007800780078003C0078003E0078001E0078001F0078001F0078001F0078001F0078001F00780
01E0078003E0078007C007800F8007803E0007FFFE0007800780078003C0078001E0078001F007
8000F0078000F8078000F8078000F8078000F8078000F8078000F8078001F0078001F0078003E0
078007C00F800F00FFFFFC001D227EA123>I<0007E0100038183000E0063001C00170038000F0
070000F00E0000701E0000701C0000303C0000303C0000307C0000107800001078000010F80000
00F8000000F8000000F8000000F8000000F8000000F8000000F800000078000000780000107C00
00103C0000103C0000101C0000201E0000200E000040070000400380008001C0010000E0020000
381C000007E0001C247DA223>I<FFFFF0000F801E0007800700078003C0078001C0078000E007
8000F007800078078000780780007C0780003C0780003C0780003C0780003E0780003E0780003E
0780003E0780003E0780003E0780003E0780003E0780003E0780003C0780003C0780007C078000
7807800078078000F0078000E0078001E0078003C0078007000F801E00FFFFF8001F227EA125>
I<FFFFFFC00F8007C0078001C0078000C007800040078000400780006007800020078000200780
002007802020078020000780200007802000078060000780E00007FFE0000780E0000780600007
802000078020000780200007802008078000080780000807800010078000100780001007800030
0780003007800070078000E00F8003E0FFFFFFE01D227EA121>I<FFFFFFC00F8007C0078001C0
078000C00780004007800040078000600780002007800020078000200780202007802000078020
0007802000078060000780E00007FFE0000780E000078060000780200007802000078020000780
20000780000007800000078000000780000007800000078000000780000007800000078000000F
C00000FFFE00001B227EA120>I<0007F008003C0C1800E0021801C001B8038000F8070000780F
0000381E0000381E0000183C0000183C0000187C0000087800000878000008F8000000F8000000
F8000000F8000000F8000000F8000000F8000000F8001FFF780000F8780000787C0000783C0000
783C0000781E0000781E0000780F00007807000078038000B801C000B800E00318003C0C080007
F00020247DA226>I<FFFC3FFF0FC003F0078001E0078001E0078001E0078001E0078001E00780
01E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E007FFFFE007
8001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0
078001E0078001E0078001E0078001E0078001E00FC003F0FFFC3FFF20227EA125>I<FFFC0FC0
078007800780078007800780078007800780078007800780078007800780078007800780078007
8007800780078007800780078007800780078007800FC0FFFC0E227EA112>I<03FFF0001F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00700F00F80F00F8
0F00F80E00F01E00401C0020380018700007C00014237EA119>I<FFFE00000FC0000007800000
078000000780000007800000078000000780000007800000078000000780000007800000078000
000780000007800000078000000780000007800000078000000780000007800000078000000780
0080078000800780008007800080078001800780018007800100078003000780030007800F000F
803F00FFFFFF0019227EA11E>76 D<FFC00003FF0FC00003F007C00003E005E00005E005E00005
E004F00009E004F00009E004F00009E004780011E004780011E004780011E0043C0021E0043C00
21E0043C0021E0041E0041E0041E0041E0040F0081E0040F0081E0040F0081E004078101E00407
8101E004078101E00403C201E00403C201E00401E401E00401E401E00401E401E00400F801E004
00F801E00400F801E004007001E00E007001E01F007003F0FFE0203FFF28227EA12D>I<FF8007
FF07C000F807C0007005E0002004F0002004F0002004780020047C0020043C0020041E0020041F
0020040F002004078020040780200403C0200401E0200401E0200400F0200400F8200400782004
003C2004003E2004001E2004000F2004000F20040007A0040003E0040003E0040001E0040001E0
040000E00E0000601F000060FFE0002020227EA125>I<000FE00000783C0000E00E0003C00780
078003C00F0001E00E0000E01E0000F03C0000783C0000787C00007C7C00007C7800003C780000
3CF800003EF800003EF800003EF800003EF800003EF800003EF800003EF800003EF800003E7800
003C7C00007C7C00007C3C0000783E0000F81E0000F00F0001E00F0001E0078003C003C0078000
E00E0000783C00000FE0001F247DA226>I<FFFFF0000F803C0007800F0007800780078007C007
8003C0078003E0078003E0078003E0078003E0078003E0078003E0078003C0078007C007800780
07800F0007803C0007FFF000078000000780000007800000078000000780000007800000078000
00078000000780000007800000078000000780000007800000078000000FC00000FFFC00001B22
7EA121>I<000FE00000783C0000E00E0003C00780078003C00F0001E00E0000E01E0000F03E00
00F83C0000787C00007C7C00007C7800003C7800003CF800003EF800003EF800003EF800003EF8
00003EF800003EF800003EF800003EF800003E7800003C7C00007C7C00007C3C0000783C000078
1E0380F00E0420E00F0801E0078813C003C8178000E80E00007C3C02000FEC0200000C0200000C
0200000E0600000F0E000007FC000007FC000007F8000003F8000001E01F2D7DA226>I<FFFFE0
00000F803C000007800E00000780078000078007C000078003C000078003E000078003E0000780
03E000078003E000078003E000078003C000078007C000078007800007800E000007803C000007
FFE000000780700000078038000007801C000007801E000007800E000007800F000007800F0000
07800F000007800F000007800F800007800F800007800F800007800F808007800FC080078007C0
800FC003C100FFFC01E2000000007C0021237EA124>I<03F0200C0C601802603001E07000E060
0060E00060E00060E00020E00020E00020F00000F000007800007F00003FF0001FFE000FFF0003
FF80003FC00007E00001E00000F00000F0000070800070800070800070800070C00060C00060E0
00C0F000C0C80180C6070081FC0014247DA21B>I<7FFFFFF87807807860078018400780084007
800840078008C007800C8007800480078004800780048007800400078000000780000007800000
078000000780000007800000078000000780000007800000078000000780000007800000078000
0007800000078000000780000007800000078000000780000007800000078000000FC00003FFFF
001E227EA123>I<FFFC07FF0FC000F80780007007800020078000200780002007800020078000
200780002007800020078000200780002007800020078000200780002007800020078000200780
002007800020078000200780002007800020078000200780002007800020078000200380004003
C0004003C0004001C0008000E000800060010000300600001C08000003F00020237EA125>I<FF
F0007FC01F80001F000F00000C000780000C000780000800078000080003C000100003C0001000
03E000300001E000200001E000200000F000400000F000400000F0004000007800800000780080
00007C018000003C010000003C010000001E020000001E020000001F020000000F040000000F04
0000000F8C0000000788000000078800000003D000000003D000000003F000000001E000000001
E000000000C000000000C000000000C0000022237FA125>I<FFF03FFC03FE1F8007E000F80F00
03C000700F0003C000200F0003C00020078001E00040078001E00040078001E0004003C002F000
8003C002F0008003C002F0008001E00478010001E00478010001E00478010000F0083C020000F0
083C020000F0083C020000F8183E06000078101E04000078101E0400007C101E0400003C200F08
00003C200F0800003C200F0800001E40079000001E40079000001E40079000000F8003E000000F
8003E000000F8003E00000070001C00000070001C00000070001C0000003000180000002000080
002F237FA132>I<7FF807FF0007E001F80003C000E00003E000C00001E000800000F001000000
F80300000078020000007C040000003E0C0000001E080000001F100000000FB000000007A00000
0007C000000003E000000001E000000001F000000003F80000000278000000047C0000000C3E00
0000081E000000101F000000300F80000020078000004007C00000C003E000008001E000010001
F000030000F000070000F8001F8001FC00FFE007FFC022227FA125>I<FEFEC0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE
07317BA40E>91 D<0804100820102010402040208040804080408040B85CFC7EFC7E7C3E381C0F
0F7AA218>I<FEFE06060606060606060606060606060606060606060606060606060606060606
0606060606060606060606060606FEFE07317FA40E>I<0FE0001838003C0C003C0E0018070000
070000070000070000FF0007C7001E07003C0700780700700700F00708F00708F00708F00F0878
17083C23900FC1E015157E9418>97 D<0E0000FE00001E00000E00000E00000E00000E00000E00
000E00000E00000E00000E00000E00000E00000E1F000E61C00E80600F00300E00380E003C0E00
1C0E001E0E001E0E001E0E001E0E001E0E001E0E001E0E001C0E003C0E00380F00700C80600C41
C0083F0017237FA21B>I<01FE000703000C07801C0780380300780000700000F00000F00000F0
0000F00000F00000F00000F000007000007800403800401C00800C010007060001F80012157E94
16>I<0000E0000FE00001E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E001F8E00704E00C02E01C01E03800E07800E07000E0F000E0F000E0F000E0F000E0
F000E0F000E0F000E07000E07800E03800E01801E00C02E0070CF001F0FE17237EA21B>I<01FC
000707000C03801C01C03801C07801E07000E0F000E0FFFFE0F00000F00000F00000F00000F000
007000007800203800201C00400E008007030000FC0013157F9416>I<003C00C6018F038F030F
070007000700070007000700070007000700FFF807000700070007000700070007000700070007
000700070007000700070007000700070007807FF8102380A20F>I<00007001F198071E180E0E
181C07001C07003C07803C07803C07803C07801C07001C07000E0E000F1C0019F0001000001000
001800001800001FFE000FFFC00FFFE03800F0600030400018C00018C00018C000186000306000
303800E00E038003FE0015217F9518>I<0E0000FE00001E00000E00000E00000E00000E00000E
00000E00000E00000E00000E00000E00000E00000E1F800E60C00E80E00F00700F00700E00700E
00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E
0070FFE7FF18237FA21B>I<1C001E003E001E001C00000000000000000000000000000000000E
00FE001E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
FFC00A227FA10E>I<01C003E003E003E001C00000000000000000000000000000000001E00FE0
01E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E060E0F0C0F18061803E000B2C82A10F>I<0E0000FE00001E00000E00000E
00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E03FC0E01F00E01C00E
01800E02000E04000E08000E10000E38000EF8000F1C000E1E000E0E000E07000E07800E03C00E
01C00E01E00E00F00E00F8FFE3FE17237FA21A>I<0E00FE001E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E00FFE00B237FA20E>I<0E1FC07F00FE60E183801E807201C00F003C00
E00F003C00E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E0038
00E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E00
3800E0FFE3FF8FFE27157F942A>I<0E1F80FE60C01E80E00F00700F00700E00700E00700E0070
0E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7FF
18157F941B>I<01FC000707000C01801800C03800E0700070700070F00078F00078F00078F000
78F00078F00078F000787000707800F03800E01C01C00E038007070001FC0015157F9418>I<0E
1F00FE61C00E80600F00700E00380E003C0E001C0E001E0E001E0E001E0E001E0E001E0E001E0E
001E0E003C0E003C0E00380F00700E80E00E41C00E3F000E00000E00000E00000E00000E00000E
00000E00000E00000E0000FFE000171F7F941B>I<01F8200704600E02601C01603801E07800E0
7800E0F000E0F000E0F000E0F000E0F000E0F000E0F000E07000E07800E03801E01C01E00C02E0
070CE001F0E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000FFE171F7E
941A>I<0E3CFE461E8F0F0F0F060F000E000E000E000E000E000E000E000E000E000E000E000E
000E000F00FFF010157F9413>I<0F8830786018C018C008C008E008F0007F803FE00FF001F800
3C801C800C800CC00CC008E018D0308FC00E157E9413>I<02000200020002000600060006000E
001E003E00FFF80E000E000E000E000E000E000E000E000E000E000E000E040E040E040E040E04
0E040708030801F00E1F7F9E13>I<0E0070FE07F01E00F00E00700E00700E00700E00700E0070
0E00700E00700E00700E00700E00700E00700E00700E00700E00F00E00F006017003827800FC7F
18157F941B>I<FFC1FE1E00780E00300E00200E002007004007004003808003808003808001C1
0001C10000E20000E20000E20000740000740000380000380000380000100017157F941A>I<FF
8FF8FF1E01E03C1C01C0180E01C0180E01E0100E01E01007026020070270200702702003843040
038438400384384001C8188001C81C8001C81C8000F00D0000F00F0000F00F0000600600006006
000060060020157F9423>I<FF83FE1F01F00E00C007008003810003830001C20000E400007800
007800003800003C00004E00008E000187000103800201C00401E00C00E03E01F0FF03FE17157F
941A>I<FFC1FE1E00780E00300E00200E002007004007004003808003808003808001C10001C1
0000E20000E20000E2000074000074000038000038000038000010000010000020000020000020
00004000F04000F08000F180004300003C0000171F7F941A>I<3FFFC038038030078020070060
0E00401C00403C0040380000700000E00001E00001C0000380400700400F00400E00C01C008038
0080780180700780FFFF8012157F9416>I<FFFFFE1701808C18>I E end
TeXDict begin @letter
bop 1789 195 a Fn(UC-405)825 357 y(SAND94-8225)781 417 y(Unlimited)13
b(Release)736 477 y(Prin)o(ted)i(Marc)o(h)h(4,)g(1994)89 679
y Fm(OPT++:)24 b(An)19 b(Ob)s(ject-Orien)n(ted)e(Class)j(Library)d(for)i
(Nonlinear)f(Optimization)859 881 y Fn(J.)e(C.)g(Meza)616 941
y(Scien)o(ti\014c)f(Computing)g(Departmen)o(t)662 1002 y(Sandia)h(National)h
(Lab)q(oratories)726 1062 y(P)l(.O.)e(Bo)o(x)h(969,)h(MS)f(9214)691
1122 y(Liv)o(ermore,)d(CA)j(94551-096)q(9)761 1182 y(meza@ca.sandia.go)o(v)
818 1384 y Fm(ABSTRA)n(CT)73 1545 y Fn(Ob)s(ject-orien)o(ted)k(programming)g
(is)i(b)q(ecoming)e(a)i(p)q(opular)h(w)o(a)o(y)e(of)h(dev)o(eloping)f(new)g
(soft)o(w)o(are.)0 1605 y(The)e(promise)f(of)h(this)g(new)g(programming)f
(paradigm)h(is)f(that)i(soft)o(w)o(are)f(dev)o(elop)q(ed)f(through)i(these)0
1665 y(concepts)12 b(will)e(b)q(e)i(more)f(reliable)f(and)i(easier)g(to)g
(re-use,)g(thereb)o(y)f(decreasing)g(the)h(time)e(and)i(cost)g(of)g(the)0
1725 y(soft)o(w)o(are)18 b(dev)o(elopmen)o(t)d(cycle.)24 b(This)18
b(rep)q(ort)g(describ)q(es)f(the)h(dev)o(elopmen)o(t)d(of)j(a)g(C++)g(class)g
(library)0 1786 y(for)f(nonlinear)f(optimization.)k(Using)d(ob)s(ject-orien)o
(ted)e(tec)o(hniques,)g(this)h(new)g(library)g(w)o(as)h(designed)0
1846 y(so)22 b(that)f(the)g(in)o(terface)f(is)h(easy)g(to)h(use)f(while)f(b)q
(eing)h(general)g(enough)h(so)g(that)g(new)f(optimization)0
1906 y(algorithms)15 b(can)i(b)q(e)f(added)h(easily)e(to)i(the)f(existing)f
(framew)o(ork.)938 2637 y(3/4)p eop
bop 0 195 a Fl(Con)n(ten)n(ts)0 305 y Fm(1)45 b(In)n(tro)r(duction)1540
b(7)0 414 y(2)45 b(Ob)s(ject-Orien)n(ted)17 b(Programming)1094
b(8)73 474 y Fn(2.1)50 b(Abstraction)38 b Fk(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)92 b Fn(9)73 534 y(2.2)50
b(Classes)22 b Fk(:)i(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)92 b Fn(9)73 594 y(2.3)50 b(Inheritance)e
Fk(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)92
b Fn(9)73 654 y(2.4)50 b(P)o(olymorphism)17 b Fk(:)25 b(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)92 b Fn(9)0 763 y Fm(3)45
b(Optimization)16 b(Classes)1306 b(10)73 824 y Fn(3.1)50 b(Nonlinear)16
b(Problem)f(Classes)25 b Fk(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)67
b Fn(11)73 884 y(3.2)50 b(Optimization)14 b(Metho)q(d)j(Classes)41
b Fk(:)25 b(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)67 b Fn(12)0 993 y Fm(4)45
b(Example)16 b(Co)r(de)1463 b(14)0 1102 y(5)45 b(Summary)1583
b(16)963 2828 y Fn(5)p eop
bop 0 195 a Fl(1.)23 b(In)n(tro)r(duction)73 305 y Fn(Ob)s(ject-orien)o(ted)
13 b(programming)h(\(OOP\))h(is)g(b)q(ecoming)e(a)j(p)q(opular)g(w)o(a)o(y)e
(of)h(dev)o(eloping)f(new)h(soft-)0 365 y(w)o(are.)39 b(Unlik)o(e)20
b(pro)q(cedural)i(programming,)g(whic)o(h)f(emphasizes)g(the)g(dev)o(elopmen)
o(t)e(of)k(algorithms)0 425 y(to)18 b(accomplish)d(a)j(sp)q(eci\014c)f(task,)
g(ob)s(ject-orien)o(ted)f(programming)g(relies)g(on)h(the)g(impleme)o(n)o
(tation)e(of)0 485 y(new)23 b(data)g(t)o(yp)q(es)g(called)f(ob)s(jects.)40
b(The)23 b(promise)e(b)q(ehind)i(this)f(programming)g(paradigm)g(is)h(that)0
545 y(soft)o(w)o(are)16 b(dev)o(elop)q(ed)g(through)h(these)f(concepts)g
(will)g(b)q(e)g(more)f(reliable)g(and)i(easier)f(to)h(re-use)f(in)g(new)0
606 y(applications,)g(thereb)o(y)f(decreasing)h(the)g(time)e(and)j(cost)f(of)
h(the)f(soft)o(w)o(are)g(dev)o(elopmen)o(t)d(cycle.)73 666
y(The)i(main)f(concept)g(b)q(ehind)h(ob)s(ject-orien)o(ted)f(programming)g
(is)g(called)g(data)i(abstraction,)g(whic)o(h)0 726 y(is)e(the)f(separation)i
(of)f(the)g(data)h(and)g(the)e(pro)q(cedures)h(for)h(manipulating)d(that)j
(data)g(from)e(an)h(applica-)0 786 y(tion)f(program.)20 b(In)13
b(man)o(y)e(w)o(a)o(ys)i(this)g(is)g(no)g(di\013eren)o(t)f(than)i(go)q(o)q(d)
h(programming)c(practices)i(that)g(try)g(to)0 846 y(k)o(eep)i(the)h
(unnecessary)g(details)f(of)i(a)f(particular)g(co)q(de)g(from)f(an)i
(end-user.)k(The)16 b(ma)s(jor)f(di\013erence)g(in)0 907 y(ob)s(ject-orien)o
(ted)d(programming)f(is)i(the)f(abilit)o(y)g(to)h(create)f(user-de\014ned)h
(data)h(t)o(yp)q(es)e(and)i(add)f(them)f(to)0 967 y(an)17 b(existing)f
(language)i(thereb)o(y)e(facilitating)g(data)h(abstraction.)24
b(It)16 b(is)h(these)f(new)h(ob)s(jects)g(that)g(giv)o(e)0
1027 y(ob)s(ject-orien)o(ted)12 b(programming)g(its)h(name.)19
b(Through)c(these)e(new)g(ob)s(jects)g(a)h(computer)e(language)i(can)0
1087 y(b)q(e)h(easily)f(extended)g(to)i(handle)e(new)h(applications.)21
b(A)15 b(go)q(o)q(d)i(example)12 b(of)k(this)f(feature)f(is)h(the)g(matrix)0
1147 y(pac)o(k)m(age)f(dev)o(elop)q(ed)e(b)o(y)h(Da)o(vies)g(\([4]\).)20
b(With)13 b(this)g(pac)o(k)m(age,)h(a)g(user)f(can)h(de\014ne)f(v)o(ectors)g
(and)h(matrices)0 1207 y(as)h(part)g(of)g(the)f(language)i(as)f(w)o(ell)e(as)
i(use)f(the)h(standard)g(op)q(erations)h(de\014ned)e(for)h(these)f(ob)s
(jects,)g(suc)o(h)0 1268 y(as)j(matrix)d(addition,)i(matrix)f(m)o(ultiplic)o
(ation,)e(and)k(in)o(v)o(ersion.)73 1328 y(Another)c(imp)q(ortan)o(t)g(trend)
g(is)g(the)g(renew)o(ed)f(in)o(terest)h(in)g(nonlinear)g(optimization.)18
b(Optimization)0 1388 y(has)c(alw)o(a)o(ys)g(o)q(ccupied)f(a)h(ma)s(jor)f
(role)h(in)f(industries,)g(suc)o(h)h(as)g(the)g(airline)e(industry)l(,)i
(where)f(sc)o(heduling)0 1448 y(problems)k(are)g(imp)q(ortan)o(t.)26
b(Recen)o(tly)l(,)15 b(ho)o(w)o(ev)o(er,)i(optimization)f(has)j(tak)o(en)e
(on)h(an)h(increasingly)e(im-)0 1508 y(p)q(ortan)o(t)e(role)f(in)f(areas)i
(suc)o(h)f(as)h(adv)m(anced)f(man)o(ufacturing)f(where)h(rapid)g(design)h
(and)f(protot)o(yping)h(of)0 1569 y(new)f(pro)q(cesses)h(and)g(devices)e(is)h
(essen)o(tial.)19 b(This)c(trend)f(is)g(partly)g(due)g(to)h(increased)e
(computer)g(p)q(o)o(w)o(er)0 1629 y(a)o(v)m(ailable)19 b(to)g(users)h(that)g
(allo)o(ws)f(for)h(the)f(rep)q(eated)g(computer)f(sim)o(ulation)f(of)j(man)o
(ufacturing)e(pro-)0 1689 y(cesses)f(and)g(devices.)k(While)16
b(in)h(the)f(past)i(the)e(design)h(pro)q(cess)g(in)o(v)o(olv)o(ed)e(a)i
(large)g(amoun)o(t)f(of)h(h)o(uman)0 1749 y(in)o(teraction,)g(it)h(is)g(no)o
(w)h(b)q(ecoming)e(feasible)h(to)h(automate)e(the)i(design)f(pro)q(cess)h
(using)g(optimization)0 1809 y(to)q(ols.)i(This)14 b(trend)f(in)g(increased)g
(computer)f(p)q(o)o(w)o(er)i(has)g(also)g(had)g(an)g(e\013ect)f(within)g(the)
h(optimization)0 1870 y(comm)o(unit)n(y)f(where)j(there)g(has)h(b)q(een)f(an)
g(increased)g(in)o(terest)f(in)h(large-scale)g(nonlinear)g(optimization)0
1930 y(problems)f([1].)73 1990 y(Because)f(of)g(the)g(wide)g(v)m(ariet)o(y)f
(of)i(applications)f(and)h(the)f(need)g(to)h(tak)o(e)e(adv)m(an)o(tage)j(of)e
(an)o(y)g(sp)q(ecial)0 2050 y(structure)e(in)g(a)g(problem,)f(man)o(y)g(soft)
o(w)o(are)h(pac)o(k)m(ages)h(ha)o(v)o(e)f(b)q(een)g(dev)o(elop)q(ed)f(to)h
(address)h(v)m(arious)g(t)o(yp)q(es)0 2110 y(of)19 b(optimization)d
(problems.)26 b(F)l(or)18 b(an)h(excellen)o(t)d(o)o(v)o(erview)g(of)j(the)f
(a)o(v)m(ailable)f(optimization)g(soft)o(w)o(are)0 2171 y(see)g(for)g
(example)e([7].)22 b(Unfortunately)l(,)17 b(the)f(large)h(n)o(um)o(b)q(er)e
(of)j(optimization)d(co)q(des)i(a)o(v)m(ailable)g(mak)o(es)0
2231 y(c)o(ho)q(osing)h(a)g(go)q(o)q(d)h(algorithm)d(for)i(a)g(particular)f
(problem)e(di\016cult.)23 b(This)18 b(is)f(esp)q(ecially)f(true)h(for)g(the)0
2291 y(no)o(vice)e(practitioner)h(of)h(optimization.)j(In)c(addition,)h(ev)o
(en)e(if)h(the)g(metho)q(ds)g(are)h(inheren)o(tly)e(similar,)0
2351 y(the)d(in)o(terface)g(to)h(the)f(co)q(des)h(can)g(b)q(e)g(quite)f
(di\013eren)o(t)g(making)f(it)i(di\016cult)e(to)i(exp)q(erimen)o(t)d(with)i
(v)m(arious)0 2411 y(metho)q(ds.)22 b(T)l(o)c(resolv)o(e)d(some)h(of)h(these)
g(issues)g(co)q(de)g(designers)f(usually)h(resort)g(to)g(one)g(of)g(t)o(w)o
(o)g(tric)o(ks:)0 2471 y(1\))d(force)g(the)g(user)g(to)g(use)g(a)h
(particular)e(calling)g(sequence)g(or)i(2\))f(the)g(optimization)e(co)q(des)j
(are)f(written)0 2532 y(using)19 b(rev)o(erse)f(comm)o(unic)o(ation.)27
b(Neither)18 b(solution)h(is)g(v)o(ery)f(satisfying)h(for)g(the)g(reasons)h
(explained)0 2592 y(b)q(elo)o(w.)73 2652 y(If)13 b(the)h(optimization)e
(algorithm)h(requires)g(a)h(particular)f(calling)g(sequence)g(the)g(user)h
(is)g(forced)f(in)o(to)963 2828 y(7)p eop
bop 0 195 a Fn(writing)19 b(a)h(subroutine)f(that)h(will)e(in)o(terface)f(b)q
(et)o(w)o(een)i(the)g(optimizer)d(and)k(the)f(function)g(ev)m(aluator.)0
255 y(While)12 b(this)h(is)h(usually)e(a)i(straigh)o(tforw)o(ard)g(task)g(it)
f(ma)o(y)e(pro)o(v)o(e)i(to)h(b)q(e)f(un)o(wieldy)f(and)i(costly)f(in)g
(certain)0 315 y(situations.)34 b(In)21 b(particular,)f(w)o(e)h(w)o(ould)f
(lik)o(e)f(to)i(fo)q(cus)g(on)g(cases)g(where)f(the)g(function)g(ev)m
(aluator)h(is)0 376 y(describ)q(ed)c(b)o(y)h(the)g(output)g(of)h(a)f(sim)o
(ulation)e(suc)o(h)i(as)h(a)f(\014nite-elemen)o(t)d(analysis.)27
b(In)17 b(this)h(case,)g(the)0 436 y(prescrib)q(ed)d(in)o(terface)e(ma)o(y)h
(not)i(b)q(e)f(general)g(enough)h(to)g(encompass)f(all)f(of)i(the)f
(parameters)f(required)0 496 y(to)e(do)g(a)g(sim)o(ulation)e(or)i(it)f(ma)o
(y)g(require)f(the)h(user)h(to)g(pac)o(k)m(age)g(an)o(y)g(extra)f
(information)g(in)g(a)h(pre-de\014ned)0 556 y(pac)o(k)o(ed)j(format.)73
616 y(The)i(second)g(option)g(that)g(is)f(frequen)o(tly)f(used)h(is)h(called)
e(rev)o(erse)h(comm)o(uni)o(cation.)k(In)c(this)g(case,)0 677
y(the)i(optimization)e(algorithm)h(returns)h(to)h(the)e(calling)h(routine)f
(whenev)o(er)g(it)h(needs)g(information)f(to)0 737 y(pro)q(ceed.)26
b(This)17 b(information)g(ma)o(y)f(b)q(e)i(a)g(function)g(v)m(alue,)f(a)h
(deriv)m(ativ)o(e,)e(or)i(an)o(y)g(other)g(data)g(that)g(is)0
797 y(required)e(b)o(y)h(the)g(optimization)e(algorithm.)23
b(F)l(rom)16 b(the)h(p)q(oin)o(t)h(of)f(view)g(of)g(the)g(user)h(this)f(is)g
(a)g(b)q(etter)0 857 y(solution)j(in)g(that)h(it)e(requires)h(less)f(co)q
(ding.)34 b(F)l(rom)19 b(the)h(p)q(oin)o(t)g(of)g(view)g(of)g(the)g(soft)o(w)
o(are)g(dev)o(elop)q(er)0 917 y(ho)o(w)o(ev)o(er,)12 b(the)h(job)g(is)g(more)
f(di\016cult.)19 b(Outside)13 b(of)g(the)g(fact)g(that)h(this)f(t)o(yp)q(e)f
(of)i(co)q(ding)f(violates)g(sev)o(eral)0 978 y(go)q(o)q(d)22
b(programming)c(practices)h(\(for)g(example,)f(single)h(en)o(try-single)g
(exit)f(co)q(des\),)j(the)e(co)q(de)h(is)f(also)0 1038 y(more)14
b(di\016cult)f(to)i(debug.)21 b(Another)15 b(disadv)m(an)o(tage)h(is)e(that)i
(soft)o(w)o(are)f(using)g(rev)o(erse)e(comm)o(unication)0 1098
y(will)g(b)q(e)i(sligh)o(tly)e(more)g(ine\016cien)o(t)e(due)k(to)f(the)g
(frequen)o(t)f(calling)h(of)g(and)h(returning)f(from)g(subroutines)0
1158 y(that)j(could)f(in)o(v)o(olv)o(e)e(sev)o(eral)h(la)o(y)o(ers)g(of)h
(subroutines.)73 1218 y(The)k(goal)h(of)g(this)f(w)o(ork)g(is)g(to)h(use)f
(the)g(ideas)h(of)f(ob)s(ject-orien)o(ted)f(programming)g(to)i(o)o(v)o
(ercome)0 1279 y(these)16 b(obstacles.)21 b(In)16 b(particular)g(w)o(e)g(hop)
q(e)h(to)g(address)f(the)g(follo)o(wing)g(issues:)73 1374 y
Fj(\017)24 b Fn(b)q(etter)16 b(program)g(in)o(terfaces)f(for)i(the)f(user)g
(of)g(optimization)f(co)q(des)73 1434 y Fj(\017)24 b Fn(rapid)16
b(ev)m(aluation)h(of)f(sev)o(eral)f(optimization)g(co)q(des)i(for)f(a)h(giv)o
(en)e(problem)73 1494 y Fj(\017)24 b Fn(rapid)16 b(dev)o(elopmen)o(t)d(of)k
(new)f(optimization)f(algorithms)73 1555 y Fj(\017)24 b Fn(more)15
b(re-usabilit)o(y)g(of)h(optimization)f(co)q(des)73 1650 y(The)j(rest)f(of)h
(this)f(pap)q(er)h(is)g(organized)f(as)i(follo)o(ws.)24 b(In)18
b(Section)f(2)h(w)o(e)f(in)o(tro)q(duce)g(some)f(concepts)0
1710 y(from)f(ob)s(ject-orien)o(ted)g(programming)f(that)i(will)f(b)q(e)h
(useful)g(for)g(our)h(discussion)f(of)g(the)g(optimization)0
1770 y(classes.)21 b(The)16 b(reader)g(who)h(is)f(familiar)e(with)i(ob)s
(ject-orien)o(ted)f(programming)g(tec)o(hniques)f(can)j(safely)0
1831 y(skip)k(this)h(section.)38 b(Section)21 b(3)h(describ)q(es)g(a)g(C++)g
(implem)o(en)o(tati)o(on)e(of)i(an)g(ob)s(ject-orien)o(ted)f(class)0
1891 y(library)13 b(for)h(unconstrained)f(optimization.)19
b(In)13 b(Section)g(4)h(w)o(e)f(giv)o(e)g(an)h(example)d(of)j(using)f(a)h
(particular)0 1951 y(class)h(for)h(solving)f(a)g(simple)e(test)i(problem.)20
b(W)l(e)14 b(conclude)h(in)g(Section)f(5)i(with)f(a)g(discussion)h(of)f
(future)0 2011 y(w)o(ork.)0 2118 y Fl(2.)23 b(Ob)t(ject-Orien)n(ted)d
(Programming)73 2227 y Fn(There)c(are)g(four)h(main)e(ideas)h(that)h(w)o(e)f
(will)f(use)h(from)f(ob)s(ject-orien)o(ted)g(programming:)73
2315 y Fj(\017)24 b Fn(abstraction)73 2375 y Fj(\017)g Fn(classes)16
b(and)h(ob)s(jects)73 2435 y Fj(\017)24 b Fn(inheritance)73
2496 y Fj(\017)g Fn(p)q(olymorphism)0 2583 y(This)e(rep)q(ort)g(do)q(es)h
(not)f(seek)g(to)g(giv)o(e)f(a)h(full)f(description)h(of)g(ob)s(ject-orien)o
(ted)e(programming,)i(but)0 2643 y(merely)13 b(to)k(pro)o(vide)e(enough)i
(bac)o(kground)g(material)d(to)i(discuss)g(the)g(new)g(optimization)f
(classes.)21 b(F)l(or)0 2704 y(a)c(fuller)e(description)g(of)i(ob)s
(ject-orien)o(ted)e(programming)g(see)g([2,)h(3)q(,)f(5)q(,)h(10].)963
2828 y(8)p eop
bop 0 195 a Fm(2.1.)18 b(Abstraction)73 287 y Fn(The)24 b(idea)g(of)g
(abstraction)h(in)e(soft)o(w)o(are)h(design)g(is)g(an)g(old)g(one.)44
b(In)24 b(its)g(most)f(general)h(form,)0 348 y(abstraction)12
b(means)e(the)g(abilit)o(y)g(to)h(isolate)g(information)f(p)q(ertaining)h(to)
g(a)h(particular)e(soft)o(w)o(are)h(design.)0 408 y(In)19 b(pro)q(cedural)g
(programming)f(for)i(example,)d(the)i(idea)g(of)g(abstraction)h(has)g(led)e
(to)i(the)f(concept)g(of)0 468 y(mo)q(dular)f(programming.)26
b(In)19 b(ob)s(ject-orien)o(ted)e(programming)g(this)h(idea)h(is)f(tak)o(en)g
(further)g(through)0 528 y(the)i(in)o(tro)q(duction)g(of)g(abstract)h(data)g
(t)o(yp)q(es.)32 b(F)l(or)20 b(the)g(purp)q(oses)h(of)g(this)f(pap)q(er)g(w)o
(e)g(will)f(de\014ne)h(an)0 588 y Fi(abstr)n(act)f(data)h(typ)n(e)e
Fn(as)h(a)g(user-de\014ned)g(extension)e(to)i(an)g(existing)f(language)h(t)o
(yp)q(e.)28 b(It)18 b(will)f(usually)0 649 y(consist)g(of)h(a)g(set)f(of)h
(data)g(structures)f(and)h(a)g(collection)e(of)h(op)q(erations)i(that)e(can)h
(manipulate)e(those)0 709 y(data)k(structures.)28 b(Through)20
b(the)f(use)f(of)i(abstraction,)f(co)q(de)g(will)f(hop)q(efully)g(b)q(e)h
(more)e(robust)j(since)0 769 y(details)g(of)g(data)h(structures)f(and)h(the)f
(algorithms)g(that)g(manipulate)f(them)g(are)h(isolated)g(from)f(the)0
829 y(user.)0 920 y Fm(2.2.)f(Classes)73 1013 y Fn(The)i(next)g(concept)g
(that)g(is)g(useful)g(is)g(that)h(of)f(a)h(class.)33 b(A)20
b Fi(class)h Fn(is)f(a)g(user-de\014ned)g(data)i(t)o(yp)q(e)0
1073 y(that)17 b(allo)o(ws)g(for)g(data)h(hiding.)23 b(A)16
b(class)h(t)o(ypically)e(consists)i(of)g(b)q(oth)h(a)f(data)h(structure)e
(and)i(a)f(group)0 1133 y(of)h(subroutines)h(that)f(can)g(manipulate)e(these)
i(data)h(structures.)26 b(The)18 b(data)h(inside)e(the)h(structure)f(is)0
1193 y(hidden)i(from)g(the)g(user)h(in)f(that)h(the)f(only)g(w)o(a)o(y)h(to)f
(access)h(it)f(is)g(through)i(the)e(subroutines)h(de\014ned)0
1253 y(as)f(part)h(of)f(the)f(class.)29 b(In)19 b(this)f(manner,)g(the)h
(user)g(do)q(es)g(not)g(need)g(to)g(kno)o(w)g(ab)q(out)h(the)e(particular)0
1314 y(implem)o(en)o(tati)o(on)f(of)i(the)g(class)g(but)g(can)g(concen)o
(trate)f(on)h(the)g(use)g(of)g(it.)29 b(An)18 b Fi(obje)n(ct)i
Fn(is)f(then)f(just)i(a)0 1374 y(particular)g(instance)f(of)i(a)f(class.)33
b(The)20 b(analogy)h(in)f(a)g(pro)q(cedural)g(language)h(is)f(that)h(of)f(a)g
(v)m(ariable)0 1434 y(b)q(eing)c(a)h(particular)f(instance)g(of)g(a)h
(pre-de\014ned)f(t)o(yp)q(e)g(suc)o(h)g(as)h(an)g(in)o(teger.)73
1494 y(An)g(o)o(v)o(erw)o(ork)o(ed)e(but)i(simple)e(example)g(is)h(that)i(of)
f(a)g(complex)e(data)j(t)o(yp)q(e.)23 b(In)16 b(this)h(example,)d(w)o(e)0
1554 y(could)19 b(de\014ne)g(a)h(class)f(called)f Fm(complex)f
Fn(that)j(consists)g(of)f(a)h(pair)f(of)h(existing)e(language)i(t)o(yp)q(es,)
g(for)0 1614 y(example,)12 b(t)o(w)o(o)h Fm(\015oats)p Fn(.)21
b(A)14 b(b)q(etter)f(example)f(is)i(that)g(of)g(a)h(class)f(called)e
Fm(V)-5 b(ector)14 b Fn(that)g(could)g(b)q(e)g(de\014ned)0
1675 y(as)i(an)g(arra)o(y)g(of)g Fm(\015oats)g Fn(together)g(with)f(an)h
Fm(in)n(t)g Fn(that)g(de\014nes)f(the)g(size)g(of)h(the)f(v)o(ector.)21
b(The)15 b(di\013erence)0 1735 y(b)q(et)o(w)o(een)j(the)h(class)g
Fm(V)-5 b(ector)19 b Fn(and)g(an)h(arra)o(y)f(whic)o(h)f(already)h(exists)f
(in)h(most)f(languages)i(is)f(that)g(w)o(e)0 1795 y(can)d(no)o(w)g(de\014ne)f
(op)q(erations)h(that)g(can)g(b)q(e)g(used)f(with)h(these)f(ob)s(jects.)21
b(Th)o(us)15 b(w)o(e)g(could)h(de\014ne)f(v)o(ector)0 1855
y(addition)h(using)h(the)f(standard)i(\\+")e(op)q(erator)i(b)q(et)o(w)o(een)d
(t)o(w)o(o)h Fm(V)-5 b(ectors)17 b Fn(of)f(the)g(same)f(size.)0
1946 y Fm(2.3.)j(Inheritance)73 2039 y Fn(Inheritance)f(allo)o(ws)h(for)h
(easy)f(extension)f(of)i(capabilities)e(and)i(is)f(p)q(erhaps)h(the)f(most)f
(imp)q(ortan)o(t)0 2099 y(new)k(concept)f(after)g(that)h(of)g(the)f(class.)35
b(The)20 b(idea)g(b)q(ehind)h(inheritance)e(is)i(that)g(a)g(new)f(class)h
(can)0 2159 y(b)q(e)e(de\014ned)g(using)g(a)g(previously)f(de\014ned)h(class)
g(as)h(a)f(template.)27 b(In)19 b(the)g(terminology)e(of)i(OOP)g(the)0
2219 y(template)c(is)i(called)f(the)g Fi(b)n(ase)j(class)e
Fn(and)h(the)f(new)g(class)g(is)g Fi(derive)n(d)g Fn(from)f(the)g(base)i
(class)f(b)o(y)f(adding)0 2279 y(new)g(features)g(to)h(it.)73
2340 y(One)g(of)h(the)f(adv)m(an)o(tages)h(of)g(inheritance)e(is)h(that)h
(all)f(of)g(the)g(algorithms)g(de\014ned)g(as)h(part)g(of)f(the)0
2400 y(old)h(class)g(are)g(still)f(v)m(alid)g(for)h(the)g(new)g(class.)26
b(This)18 b(results)g(in)f(more)g(reusable)g(co)q(de)h(since)f(it)h(is)g(not)
0 2460 y(necessary)e(to)h(rewrite)e(this)h(p)q(ortion)h(of)g(the)f(algorithm)
f(for)h(the)g(deriv)o(ed)f(classes.)0 2551 y Fm(2.4.)j(P)n(olymorphism)73
2643 y Fn(The)d(last)h(concept)e(w)o(e)h(will)f(discuss)h(is)g(called)f
Fi(p)n(olymorphism)p Fn(.)19 b(In)c(C++,)g(it)g(is)g(p)q(ossible)g(to)g(ha)o
(v)o(e)g(a)0 2704 y(p)q(oin)o(ter)h(to)h(a)g(function)g(that)g(will)e(p)q
(erform)h(di\013eren)o(t)f(actions)i(dep)q(ending)g(on)g(what)g(class)g(it)f
(b)q(elongs)963 2828 y(9)p eop
bop 0 195 a Fn(to.)24 b(In)17 b(this)g(w)o(a)o(y)l(,)g(it)f(is)h(p)q(ossible)
g(to)h(defer)e(an)i(algorithmic)d(design)j(decision)e(un)o(til)g(it)h(is)g
(required.)22 b(In)0 255 y(the)15 b(OOP)g(terminology)l(,)e(these)i
(functions)g(are)g(called)f Fi(virtual)j(functions)p Fn(.)22
b(If)14 b(a)i(class)f(con)o(tains)g(virtual)0 315 y(functions)e(then)g(it)f
(is)h(called)e(an)j Fi(abstr)n(act)g(class)p Fn(.)21 b(The)13
b(reason)g(for)g(this)g(distinction)f(is)h(that)g(an)g(abstract)0
376 y(class)20 b(can)g(nev)o(er)f(b)q(e)i(used)f(to)g(create)g(an)g(ob)s
(ject,)g(it)g(can)g(only)g(b)q(e)g(used)h(as)f(a)h(base)f(class)h(for)f
(other)0 436 y(deriv)o(ed)15 b(classes.)0 542 y Fl(3.)23 b(Optimizati)o(on)e
(Classes)73 651 y Fn(There)e(ha)o(v)o(e)g(b)q(een)g(sev)o(eral)f(attempts)g
(at)i(designing)f(optimization)f(classes.)30 b(In)19 b([9])g(Sc)o(ho)q(en)o
(b)q(erg)0 711 y(dev)o(elop)q(ed)14 b(a)h(set)f(of)h(classes)g(for)f(the)h
(unconstrained)g(optimization)e(of)h(arbitrary)h(functions.)21
b(Sc)o(ho)q(en-)0 772 y(b)q(erg)c(describ)q(es)f(3)h(classes)f(that)h
(together)g(c)o(ho)q(ose)f(a)h(particular)f(algorithm,)f(set)i(the)f
(tolerances,)f(and)0 832 y(p)q(erform)h(the)g(actual)h(optimization.)22
b(Nic)o(hols)15 b(et)i(al.)f([8])h(ha)o(v)o(e)f(also)h(dev)o(elop)q(ed)f
(optimization)f(classes)0 892 y(for)h(linear)f(op)q(erators)h(in)g(the)f(ph)o
(ysical)f(sciences)h(and)h(sp)q(eci\014cally)e(for)i(linear)e(op)q(erators)j
(arising)f(from)0 952 y(geoph)o(ysical)g(in)o(v)o(ersion)f(problems.)73
1012 y(W)l(e)22 b(will)f(tak)o(e)h(a)h(sligh)o(tly)e(di\013eren)o(t)g
(approac)o(h)j(b)o(y)d(making)h(a)g(distinction)g(b)q(et)o(w)o(een)f
(nonlinear)0 1073 y(problems)c(and)i(the)f(metho)q(ds)f(used)i(to)f(solv)o(e)
g(these)g(problems.)26 b(The)18 b(rationale)g(for)h(this)f(decision)f(is)0
1133 y(that)d(users)g(seldom)e(are)i(a)o(w)o(are)g(of)g(the)f(in)o(tricacies)
f(of)i(the)f(v)m(arious)i(metho)q(ds)e(nor)h(should)g(they)f(need)h(to)0
1193 y(b)q(ecome)h(exp)q(erts)h(in)g(n)o(umerical)e(analysis.)22
b(On)17 b(the)f(other)h(extreme,)c(the)k(dev)o(elop)q(er)e(of)i(optimization)
0 1253 y(algorithms)d(usually)g(do)q(es)i(not)f(care)f(ab)q(out)i(the)e
(details)h(of)g(ho)o(w)g(a)g(problem)e(is)h(de\014ned)h(other)f(than)i(to)0
1313 y(kno)o(w)e(certain)g(mathematical)d(prop)q(erties)j(and)g(some)f
(general)h(problem)f(c)o(haracteristics.)19 b(By)13 b(making)0
1373 y(a)20 b(distinction)g(b)q(et)o(w)o(een)f(problems)g(and)h(metho)q(ds)g
(w)o(e)f(can)i(dev)o(elop)d(co)q(des)j(that)f(will)f(hop)q(efully)h(b)q(e)0
1434 y(used)c(b)o(y)f(b)q(oth)i(groups)g(without)g(ha)o(ving)e(to)i(rewrite)e
(the)g(class)h(libraries)f(ev)o(ery)g(time)e(a)k(new)f(problem)0
1494 y(is)g(presen)o(ted)f(or)i(a)g(new)f(algorithm)f(is)h(dev)o(elop)q(ed.)
73 1554 y(W)l(e)g(will)f(write)h(the)g(general)g(nonlinear)g(optimization)f
(problem)f(as)j(follo)o(ws:)688 1642 y(min)682 1672 y Fh(x)p
Fg(2)p Fh(R)753 1662 y Ff(n)874 1642 y Fk(f)5 b Fn(\()p Fk(x)p
Fn(\))919 b(\(1\))561 1732 y(sub)s(ject)16 b(to)41 b Fk(h)843
1739 y Fh(i)858 1732 y Fn(\()p Fk(x)p Fn(\))13 b(=)h(0)p Fk(;)90
b(i)13 b Fn(=)h(1)p Fk(;)8 b(:)g(:)g(:)g(;)g(p;)817 1804 y(g)840
1811 y Fh(i)855 1804 y Fn(\()p Fk(x)p Fn(\))13 b Fj(\025)h
Fn(0)p Fk(;)92 b(i)13 b Fn(=)h(1)p Fk(;)8 b(:)g(:)g(:)g(;)g(m:)0
1892 y Fn(In)20 b(this)h(problem,)e(the)h(ob)s(jectiv)o(e)f(function)h
Fk(f)5 b Fn(\()p Fk(x)p Fn(\))21 b(and)g(the)f(constrain)o(t)h(functions)f
Fk(h)1647 1899 y Fh(i)1662 1892 y Fn(\()p Fk(x)p Fn(\))g(and)h
Fk(g)1870 1899 y Fh(i)1884 1892 y Fn(\()p Fk(x)p Fn(\))0 1953
y(are)g(assumed)f(to)h(b)q(e)g(general)f(nonlinear)h(functions.)34
b(In)20 b(this)h(rep)q(ort,)h(w)o(e)e(will)f(limit)f(our)k(scop)q(e)f(to)0
2013 y(consider)i(only)g(the)g(unconstrained)h(optimization)e(problem.)41
b(The)23 b(question)g(of)h(whether)f(classes)0 2073 y(for)e(unconstrained)f
(optimization)f(problems)g(should)i(b)q(e)f(sub)q(classes)h(of)g(the)f
(general)g(optimization)0 2133 y(problem)15 b(is)h(rather)g(tric)o(ky)f(and)h
(w)o(e)g(will)f(dela)o(y)h(the)g(discussion)g(of)h(this)f(issue)g(un)o(til)f
(the)h(last)g(section.)73 2193 y(The)24 b(end-users)h(of)f(optimization)f
(algorithms)g(are)h(usually)g(quite)f(kno)o(wledgeable)h(ab)q(out)h(the)0
2254 y(problems)12 b(they)h(are)h(trying)f(to)h(solv)o(e.)20
b(Ho)o(w)o(ev)o(er,)12 b(this)h(information)g(usually)g(p)q(ertains)h(to)g
(the)f(ph)o(ysical)0 2314 y(problem)19 b(or)i(to)g(the)f(algorithmic)f
(details)h(of)h(the)f(computer)g(mo)q(del.)33 b(F)l(or)20 b(instance,)h(the)g
(user)f(will)0 2374 y(kno)o(w)13 b(the)f(dimension)f(of)i(the)f(problem,)g
(whether)g(analytic)g(\014rst)h(or)g(second)f(deriv)m(ativ)o(es)g(are)g(a)o
(v)m(ailable,)0 2434 y(and)19 b(a)g(general)f(idea)h(ab)q(out)g(the)g(cost)g
(of)f(a)h(function)g(ev)m(aluation.)28 b(The)18 b(dev)o(elop)q(er)g(of)h
(optimization)0 2494 y(algorithms)i(on)h(the)g(other)g(hand,)h(w)o(ould)f
(usually)f(lik)o(e)f(to)i(kno)o(w)g(more)e(ab)q(out)k(the)d(mathematical)0
2554 y(prop)q(erties)i(of)f(the)h(problem)e(as)i(w)o(ell)e(as)i(an)o(y)g(sp)q
(ecial)f(structure)g(that)h(migh)o(t)e(b)q(e)i(exploited.)39
b(F)l(or)0 2615 y(example,)14 b(a)i(dev)o(elop)q(er)f(migh)o(t)g(ask)i(an)o
(y)f(or)g(all)g(of)h(the)f(follo)o(wing)g(questions:)73 2704
y Fj(\017)24 b Fn(Ho)o(w)16 b(smo)q(oth)g(is)g(the)g(function?)22
b(Is)16 b(the)g(function)g Fk(C)1125 2686 y Fe(0)1144 2704
y Fn(,)g Fk(C)1213 2686 y Fe(1)1232 2704 y Fn(,)g Fk(C)1301
2686 y Fe(2)1320 2704 y Fn(,)g(etc.?)951 2828 y(10)p eop
bop 73 195 a Fj(\017)24 b Fn(Do)q(es)f(the)f(ob)s(jectiv)o(e)f(function)h(ha)
o(v)o(e)f(an)o(y)i(sp)q(ecial)f(prop)q(erties,)h(for)g(example,)e(is)h(it)g
(a)h(linear)122 255 y(function,)16 b(a)g(quadratic)g(function,)g(etc.?)73
315 y Fj(\017)24 b Fn(Is)16 b(this)g(a)h(large)f(dimensional)f(problem?)73
376 y Fj(\017)24 b Fn(Is)19 b(there)f(an)o(y)h(other)g(sp)q(ecial)g
(structure)f(to)i(the)e(problem?)29 b(F)l(or)19 b(example,)e(is)i(this)f(a)i
(partially)122 436 y(separable)c(problem?)73 496 y Fj(\017)24
b Fn(Ho)o(w)19 b(man)o(y)f(digits)h(of)g(accuracy)g(do)q(es)h(the)f(ob)s
(jectiv)o(e)e(function)i(ha)o(v)o(e?)30 b(Ho)o(w)19 b(man)o(y)f(digits)h(of)
122 556 y(accuracy)d(do)q(es)h(the)f(deriv)m(ativ)o(e)e(function)i(ha)o(v)o
(e?)73 616 y Fj(\017)24 b Fn(Is)16 b(the)g(Hessian)g(matrix)f(sparse)h(or)h
(dense?)73 677 y Fj(\017)24 b Fn(Is)16 b(the)g(ob)s(jectiv)o(e)e(function)i
(exp)q(ensiv)o(e)f(to)i(compute?)73 791 y(T)l(o)g(consider)g(the)f(\014rst)h
(prop)q(ert)o(y)g(only)l(,)f(a)o(v)m(ailable)g(optimization)e(algorithms)i
(could)h(b)q(e)f(classi\014ed)0 851 y(according)i(to)g(the)f(amoun)o(t)g(of)h
(smo)q(othness)g(assumed)f(in)g(the)g(ob)s(jectiv)o(e)f(function.)25
b(F)l(or)17 b(example,)f(if)0 911 y(the)f(function)g(is)g Fk(C)360
893 y Fe(2)395 911 y Fn(\(t)o(wice)f(con)o(tin)o(uously)g(di\013eren)o
(tiable\),)f(then)j(one)f(could)g(use)g(a)h(Newton)f(metho)q(d.)0
971 y(Ho)o(w)o(ev)o(er,)20 b(if)g(the)h(function)g(is)g(only)g(con)o(tin)o
(uous,)g(then)g(one)g(w)o(ould)g(probably)h(use)f(a)g(direct-searc)o(h)0
1032 y(metho)q(d.)39 b(F)l(or)22 b(most)f(users)i(it)f(ma)o(y)e(b)q(e)j
(di\016cult)e(to)h(pro)o(v)o(e)g(ho)o(w)g(m)o(uc)o(h)f(con)o(tin)o(uit)o(y)f
(the)i(ob)s(jectiv)o(e)0 1092 y(function)h(has)h(and)g(therefore)e(they)h(ma)
o(y)f(not)h(b)q(e)h(able)f(to)g(pic)o(k)f(the)h(most)f(appropriate)i(metho)q
(d.)0 1152 y(What)c(is)f(more)f(lik)o(ely)f(is)i(that)h(a)g(user)f(will)g
(use)g(the)g(\014rst)h(a)o(v)m(ailable)e(optimization)g(soft)o(w)o(are)i(or)f
(the)0 1212 y(easiest)d(one)g(to)h(use)f(among)g(sev)o(eral,)f(usually)h
(with)g(mixed)e(results.)73 1272 y(It)f(seems)e(appropriate)j(then)f(to)h
(de\014ne)e(nonlinear)h(problems)f(from)g(the)h(p)q(oin)o(t)g(of)h(view)e(of)
i(the)e(user.)0 1333 y(On)j(the)g(other)g(hand,)g(optimization)f(metho)q(d)g
(classes)h(should)g(b)q(e)h(de\014ned)e(from)g(the)h(p)q(oin)o(t)g(of)g(view)
g(of)0 1393 y(the)i(dev)o(elop)q(er,)f(as)i(there)f(is)g(a)h(great)g(deal)f
(of)h(similarit)o(y)c(b)q(et)o(w)o(een)j(v)m(arious)h(algorithms.)24
b(In)17 b(the)g(rest)0 1453 y(of)g(this)g(section,)f(w)o(e)h(prop)q(ose)h
(suc)o(h)f(a)g(division)g(and)g(discuss)g(a)h(set)e(of)i(C++)f(classes)g(for)
g(eac)o(h)g(one)g(of)0 1513 y(these)f(t)o(w)o(o)g(cases.)0
1608 y Fm(3.1.)i(Nonlinear)f(Problem)g(Classes)73 1700 y Fn(One)d(of)h(the)g
(\014rst)f(questions)h(that)g(arises)f(is)h(the)f(degree)g(of)h(con)o(tin)o
(uit)o(y)e(in)h(the)g(ob)s(jectiv)o(e)f(function.)0 1760 y(This)19
b(information)e(ma)o(y)g(not)i(b)q(e)f(readily)g(a)o(v)m(ailable,)g(but)g
(what)h(is)g(clear)e(is)h(the)h(a)o(v)m(ailabilit)o(y)d(of)j(ana-)0
1820 y(lytic)d(deriv)m(ativ)o(es.)25 b(As)17 b(suc)o(h)h(w)o(e'v)o(e)e(c)o
(hosen)h(to)i(classify)e(nonlinear)g(programming)g(problems)f(b)o(y)h(the)0
1881 y(a)o(v)m(ailabilit)o(y)d(of)j(functions)f(for)h(computing)e(the)h
(deriv)m(ativ)o(es:)130 1995 y(NLP0)h({)g(No)f(deriv)m(ativ)o(e)e
(information)i(a)o(v)m(ailable)130 2055 y(NLP1)h({)g(Analytic)d(\014rst)j
(deriv)m(ativ)o(es)e(a)o(v)m(ailable)130 2115 y(NLP2)i({)g(Analytic)d
(\014rst)j(and)g(second)f(deriv)m(ativ)o(es)f(a)o(v)m(ailable)73
2229 y(In)h(Figure)f(1,)h(w)o(e)g(presen)o(t)f(one)h(impleme)o(n)o(tation)d
(of)k(a)f(nonlinear)g(problem)e(class.)22 b(The)16 b(\014rst)g(class)0
2289 y(w)o(e)11 b(de\014ne)h(is)f(called)g(NLP0)i(for)f(NonLinear)g(Problem)e
Fk(C)1055 2271 y Fe(0)1074 2289 y Fn(.)20 b(This)12 b(class)g(con)o(tains)f
(information)g(common)0 2350 y(to)k(all)g(problems)e(including:)20
b(1\))15 b(the)g(problem)e(dimension,)g(2\))i(a)h(curren)o(t)e(p)q(oin)o(t,)g
(3\))i(a)f(function)g(v)m(alue,)0 2410 y(and)i(4\))f(a)h(function)f(to)h(ev)m
(aluate)f(the)g(ob)s(jectiv)o(e)e(function.)73 2470 y(The)f(class)h(NLP1)f
(is)g(deriv)o(ed)f(from)g(the)h(base)g(class)g(NLP0)h(b)o(y)f(adding)h(a)f
(mem)o(b)q(er)d(for)j(the)g(gradien)o(t)0 2530 y(and)k(a)g(function)f(to)h
(ev)m(aluate)f(the)g(gradien)o(t.)22 b(Lik)o(ewise,)14 b(the)j(class)f(NLP2)h
(is)f(deriv)o(ed)f(from)g(NLP1)j(b)o(y)0 2590 y(adding)h(the)g(necessary)f
(information)g(to)h(compute)e(and)i(store)g(the)f(Hessian.)28
b(By)18 b(using)h(inheritance)0 2651 y(w)o(e)d(ha)o(v)o(e)f(b)q(een)h(able)g
(to)h(tak)o(e)f(adv)m(an)o(tage)h(of)g(the)f(co)q(de)g(that)h(is)f(already)g
(written)g(at)g(the)g(lo)o(w)o(er)f(lev)o(els.)951 2828 y(11)p
eop
bop 390 1181 a @beginspecial 0.500000 @llx 274.500000 @lly
616.500000 @urx 791.500000 @ury 2808 @rwi @setspecial
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
  } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
  } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def

initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
4.000 0 2.500 2.500 0.000 0.000 513.000 612.000 rect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
4.000 0 110.500 56.500 0.000 0.000 396.000 477.000 rect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
4.000 0 218.500 101.500 0.000 0.000 243.000 369.000 rect
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 227.500 119.500 0.000 0.000 26.000 61.347 rect
gsave
150.173 240.500 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -30.000 6.000 S
(L) -12.667 6.000 S
(P) 1.992 6.000 S
(0) 18.000 6.000 S
grestore
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 119.500 65.500 0.000 0.000 26.000 61.347 rect
gsave
96.173 132.500 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -30.000 6.000 S
(L) -12.667 6.000 S
(P) 1.992 6.000 S
(1) 18.000 6.000 S
grestore
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 11.500 11.500 0.000 0.000 26.000 61.347 rect
gsave
42.173 24.500 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -30.000 6.000 S
(L) -12.667 6.000 S
(P) 1.992 6.000 S
(2) 18.000 6.000 S
grestore
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 155.500 110.500 0.000 0.000 51.000 254.707 rect
gsave
237.853 181.000 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(C) -127.000 -6.000 S
(o) -109.667 -6.000 S
(l) -95.007 -6.000 S
(u) -88.339 -6.000 S
(m) -73.679 -6.000 S
(n) -52.339 -6.000 S
(V) -37.679 -6.000 S
(e) -21.671 -6.000 S
(c) -8.324 -6.000 S
(t) 5.023 -6.000 S
(o) 13.015 -6.000 S
(r) 27.675 -6.000 S
( ) 37.015 -6.000 S
(G) 43.683 -6.000 S
(r) 62.351 -6.000 S
(a) 71.691 -6.000 S
(d) 85.039 -6.000 S
( ) 99.699 -6.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(E) -127.000 19.000 S
(v) -110.992 19.000 S
(a) -97.644 19.000 S
(l) -84.296 19.000 S
(G) -77.628 19.000 S
(\() -58.960 19.000 S
(\)) -50.968 19.000 S
grestore
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 56.500 56.500 0.000 0.000 51.000 292.136 rect
gsave
202.568 82.000 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(S) -146.000 -6.000 S
(y) -129.992 -6.000 S
(m) -116.644 -6.000 S
(m) -95.304 -6.000 S
(e) -73.964 -6.000 S
(t) -60.617 -6.000 S
(r) -52.625 -6.000 S
(i) -43.285 -6.000 S
(c) -36.617 -6.000 S
(M) -23.269 -6.000 S
(a) -3.277 -6.000 S
(t) 10.070 -6.000 S
(r) 18.062 -6.000 S
(i) 27.402 -6.000 S
(x) 34.070 -6.000 S
( ) 47.417 -6.000 S
(H) 54.085 -6.000 S
(e) 71.417 -6.000 S
(s) 84.765 -6.000 S
(s) 98.113 -6.000 S
(i) 111.460 -6.000 S
(a) 118.128 -6.000 S
(n) 131.476 -6.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(E) -146.000 19.000 S
(v) -129.992 19.000 S
(a) -116.644 19.000 S
(l) -103.296 19.000 S
(H) -96.628 19.000 S
(\() -79.296 19.000 S
(\)) -71.304 19.000 S
grestore
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 290.500 146.500 0.000 0.000 151.000 287.378 rect
gsave
290.189 366.000 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(i) -143.000 -56.000 S
(n) -136.332 -56.000 S
(t) -121.671 -56.000 S
( ) -113.679 -56.000 S
(d) -107.011 -56.000 S
(i) -92.351 -56.000 S
(m) -85.683 -56.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(C) -143.000 -31.000 S
(o) -125.667 -31.000 S
(l) -111.007 -31.000 S
(u) -104.339 -31.000 S
(m) -89.679 -31.000 S
(n) -68.339 -31.000 S
(V) -53.679 -31.000 S
(e) -37.671 -31.000 S
(c) -24.324 -31.000 S
(t) -10.976 -31.000 S
(o) -2.984 -31.000 S
(r) 11.675 -31.000 S
( ) 21.015 -31.000 S
(x) 27.683 -31.000 S
(c) 41.031 -31.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(v) -143.000 -6.000 S
(o) -129.652 -6.000 S
(i) -114.992 -6.000 S
(d) -108.324 -6.000 S
( ) -93.664 -6.000 S
(*) -86.996 -6.000 S
(D) -77.656 -6.000 S
(a) -60.324 -6.000 S
(t) -46.976 -6.000 S
(a) -38.984 -6.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(d) -143.000 19.000 S
(o) -128.339 19.000 S
(u) -113.679 19.000 S
(b) -99.019 19.000 S
(l) -84.359 19.000 S
(e) -77.691 19.000 S
( ) -64.343 19.000 S
(f) -57.675 19.000 S
(v) -49.683 19.000 S
(a) -36.335 19.000 S
(l) -22.988 19.000 S
(u) -16.320 19.000 S
(e) -1.660 19.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(d) -143.000 44.000 S
(o) -128.339 44.000 S
(u) -113.679 44.000 S
(b) -99.019 44.000 S
(l) -84.359 44.000 S
(e) -77.691 44.000 S
( ) -64.343 44.000 S
(E) -57.675 44.000 S
(v) -41.667 44.000 S
(a) -28.320 44.000 S
(l) -14.972 44.000 S
(F) -8.304 44.000 S
(\() 6.355 44.000 S
(\)) 14.347 44.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(v) -143.000 69.000 S
(i) -129.652 69.000 S
(r) -122.984 69.000 S
(t) -113.644 69.000 S
(u) -105.652 69.000 S
(a) -90.992 69.000 S
(l) -77.644 69.000 S
( ) -70.976 69.000 S
(v) -64.308 69.000 S
(o) -50.960 69.000 S
(i) -36.300 69.000 S
(d) -29.632 69.000 S
( ) -14.972 69.000 S
(E) -8.304 69.000 S
(v) 7.703 69.000 S
(a) 21.050 69.000 S
(l) 34.398 69.000 S
(\() 41.066 69.000 S
(\)) 49.058 69.000 S
grestore
restore
end
 @endspecial 592 1327 a Fn(Figure)16 b(1:)22 b(Nonlinear)15
b(problem)g(classes)73 1461 y(It)21 b(is)g(not)h(in)o(tended)e(that)i(these)f
(base)h(classes)f(co)o(v)o(er)f(ev)o(ery)g(nonlinear)h(problem,)g(but)g
(starting)0 1522 y(with)16 b(these)g(classes)g(the)g(user)g(can)g(build)g
(new)g(classes)g(that)g(con)o(tain)g(the)g(sp)q(eci\014c)g(details)f(of)i
(the)e(real)0 1582 y(problem.)28 b(Since)18 b(the)g(optimization)f(metho)q(d)
i(classes)g(describ)q(ed)f(b)q(elo)o(w)h(will)f(use)g(the)h(base)g(classes,)0
1642 y(the)f(optimization)f(algorithms)h(will)f(still)g(w)o(ork)i(with)f(the)
g(new)h(user)f(classes)h(without)g(ha)o(ving)f(to)h(b)q(e)0
1702 y(rewritten.)73 1762 y(In)h(our)h(implem)o(en)o(tation)d(of)j(the)f
(optimization)f(classes,)i(w)o(e)f(ha)o(v)o(e)g(de\014ned)g(the)g(functions)h
(that)0 1823 y(ev)m(aluate)14 b(the)f(ob)s(jectiv)o(e)f(function,)i(gradien)o
(t,)f(and)i(Hessian)e(as)i(virtual)e(functions.)20 b(As)14
b(w)o(e)f(men)o(tioned)0 1883 y(in)18 b(the)g(previous)g(section,)g(this)g
(means)f(that)i(the)f(NLPX)g(classes)g(\(where)g(X)f(can)i(stand)g(for)f(0,)h
(1,)g(or)0 1943 y(2\))d(are)g(abstract)g(classes)g(and)h(can)e(only)h(b)q(e)g
(used)g(as)g(base)g(classes)g(for)g(other)g(classes.)21 b(This)16
b(allo)o(ws)g(us)0 2003 y(to)h(defer)g(the)f(de\014nition)h(of)g(ho)o(w)g
(the)g(function,)g(gradien)o(t,)f(and)i(Hessian)e(are)h(actually)g(computed)e
(so)0 2063 y(that)h(users)g(can)g(create)f(their)g(o)o(wn)g(de\014nitions.)21
b(In)16 b(essence,)e(the)i(base)g(classes)f(con)o(tain)h(placeholders)0
2124 y(for)h(the)f(co)q(des)g(that)h(will)e(b)q(e)h(called)g(to)g(compute)f
(the)h(ob)s(jectiv)o(e)e(function.)73 2184 y(As)f(part)h(of)f(our)h(implem)o
(en)n(tation)d(w)o(e)i(also)h(pro)o(vide)e(3)h(classes)h(deriv)o(ed)d(from)h
(NLPX)h(called)g(NLFX)0 2244 y(that)f(ha)o(v)o(e)g(a)g(particular)g(calling)f
(sequence)g(to)h(the)g(required)f(functions.)19 b(These)12
b(classes)g(can)g(b)q(e)h(used)f(to)0 2304 y(solv)o(e)i(some)g(simple)e
(optimization)h(problems)h(or)h(can)g(b)q(e)f(used)h(as)h(templates)d(for)i
(more)e(sophisticated)0 2364 y(ob)s(jectiv)o(e)19 b(functions.)34
b(In)20 b(Section)g(4,)h(w)o(e)f(will)g(giv)o(e)f(some)h(examples)e(using)j
(the)f(NLFX)g(classes)h(to)0 2425 y(demonstrate)15 b(some)h(of)g(the)g
(features)g(of)h(our)g(class)f(libraries.)0 2519 y Fm(3.2.)i(Optimization)e
(Metho)r(d)i(Classes)73 2611 y Fn(There)13 b(are)h(man)o(y)e
(classi\014cations)i(p)q(ossible)g(for)g(optimization)d(algorithms,)i(but)h
(most)f(w)o(ell-kno)o(wn)0 2672 y(metho)q(ds)j(can)g(b)q(e)h(group)q(ed)g(in)
o(to)f(one)g(of)h(three)e(classes:)951 2828 y(12)p eop
bop 195 1175 a @beginspecial 36.500000 @llx 466.500000 @lly
512.659973 @urx 764.500000 @ury 3744 @rwi @setspecial
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
  } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
  } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def

initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 147.337 37.500 0.000 0.000 36.975 70.579 rect
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 156.365 48.358 0.000 0.000 16.000 46.166 rect
gsave
71.441 164.365 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(D) -22.141 4.000 S
(i) -12.031 4.000 S
(r) -8.141 4.000 S
(e) -2.693 4.000 S
(c) 5.092 4.000 S
(t) 12.878 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 147.739 336.782 0.000 0.000 36.171 128.263 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 161.002 346.648 0.000 0.000 16.000 107.018 rect
gsave
400.158 169.002 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -52.851 4.000 S
(e) -42.740 4.000 S
(w) -34.954 4.000 S
(t) -24.065 4.000 S
(o) -19.402 4.000 S
(n) -10.851 4.000 S
(-) -2.299 4.000 S
(L) 2.362 4.000 S
(i) 10.914 4.000 S
(k) 14.804 4.000 S
(e) 22.590 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 146.856 140.823 0.000 0.000 37.936 109.261 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 157.477 168.421 0.000 0.000 16.000 63.255 rect
gsave
200.049 165.477 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(C) -31.078 4.000 S
(G) -20.968 4.000 S
(-) -10.078 4.000 S
(L) -5.416 4.000 S
(i) 3.135 4.000 S
(k) 7.025 4.000 S
(e) 14.811 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.094 37.839 0.000 0.000 43.405 67.185 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 297.974 52.424 0.000 0.000 16.000 38.014 rect
gsave
71.432 305.974 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(P) -18.075 4.000 S
(D) -8.737 4.000 S
(S) 1.373 4.000 S
( ) 10.711 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.094 118.778 0.000 0.000 43.405 67.185 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 297.974 140.155 0.000 0.000 16.000 24.431 rect
gsave
152.371 305.974 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(C) -11.344 4.000 S
(G) -1.233 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.094 281.525 0.000 0.000 43.405 67.185 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 288.328 287.335 0.000 0.000 31.000 67.782 rect
gsave
321.226 303.828 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(Q) -33.164 -4.000 S
(u) -22.275 -4.000 S
(a) -13.723 -4.000 S
(s) -5.937 -4.000 S
(i) 1.848 -4.000 S
(-) 5.738 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -33.164 11.000 S
(e) -23.054 11.000 S
(w) -15.268 11.000 S
(t) -4.378 11.000 S
(o) 0.283 11.000 S
(n) 8.835 11.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.094 199.717 0.000 0.000 43.405 67.185 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 297.974 205.714 0.000 0.000 16.000 55.192 rect
gsave
233.310 305.974 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(L) -26.785 4.000 S
(B) -18.233 4.000 S
(F) -8.123 4.000 S
(G) 0.428 4.000 S
(S) 11.317 4.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
4.000 0 29.500 179.676 0.000 0.000 36.171 165.589 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 36.676 204.786 0.000 0.000 26.000 115.368 rect
gsave
262.470 49.676 T translate
0.0 rotate
1 1 scale
24.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(O) -56.713 6.000 S
(P) -38.045 6.000 S
(T) -22.037 6.000 S
(I) -7.377 6.000 S
(M) -0.709 6.000 S
(I) 19.282 6.000 S
(Z) 25.950 6.000 S
(E) 40.610 6.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.094 439.597 0.000 0.000 43.405 67.185 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 288.328 445.935 0.000 0.000 31.000 66.724 rect
gsave
479.297 303.828 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(F) -32.564 -4.000 S
(D) -24.012 -4.000 S
( ) -13.902 -4.000 S
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -32.564 11.000 S
(e) -22.454 11.000 S
(w) -14.668 11.000 S
(t) -3.778 11.000 S
(o) 0.883 11.000 S
(n) 9.435 11.000 S
grestore
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 281.495 362.953 0.000 0.000 42.602 64.471 rect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 293.796 366.841 0.000 0.000 16.000 59.938 rect
gsave
396.810 301.796 T translate
0.0 rotate
1 1 scale
14.000 (_Helvetica-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(N) -29.658 4.000 S
(e) -19.548 4.000 S
(w) -11.762 4.000 S
(t) -0.872 4.000 S
(o) 3.789 4.000 S
(n) 12.341 4.000 S
grestore
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 400.914 279.486 400.914 185.440 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 319.476 278.682 398.199 186.243 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 479.637 278.682 403.628 187.047 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 239.396 279.486 194.606 187.047 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 153.208 280.290 189.855 187.851 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 70.414 278.682 70.414 185.440 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 71.092 146.856 71.092 109.077 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 400.235 146.053 400.235 108.273 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 201.765 145.249 201.765 107.470 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 399.557 107.470 71.092 107.470 Line
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
4.000 256.669 105.862 256.669 68.886 Line
restore
end
 @endspecial 532 1322 a Fn(Figure)16 b(2:)22 b(Optimization)14
b(metho)q(d)h(hierarc)o(h)o(y)73 1456 y Fj(\017)24 b Fn(Direct)15
b(Searc)o(h)h(metho)q(ds)73 1516 y Fj(\017)24 b Fn(Conjugate)17
b(gradien)o(t)f(lik)o(e)f(metho)q(ds)73 1576 y Fj(\017)24 b
Fn(Newton)16 b(lik)o(e)f(metho)q(ds)0 1678 y(F)l(or)j(example,)d(metho)q(ds)i
(suc)o(h)g(as)h(the)g(Nelder-Mead)e(simplex)f(metho)q(d,)h(the)i(b)q(o)o(x)g
(metho)q(d,)e(and)i(the)0 1738 y(parallel)23 b(direct)g(searc)o(h)h(metho)q
(d)f(fall)h(in)o(to)f(the)h(direct)f(searc)o(h)h(class.)45
b(The)24 b(nonlinear)f(conjugate)0 1798 y(gradien)o(t)14 b(metho)q(d)f(and)i
(limited)c(memory)g(BF)o(GS)i(metho)q(ds)h(fall)f(in)o(to)h(the)g(Conjugate)h
(Gradien)o(t)e(class.)0 1858 y(Finally)21 b(the)g(Newton)h(class,)h(could)f
(include)e(metho)q(ds)h(suc)o(h)h(as)h(\014nite-di\013erence)d(Newton,)j
(quasi-)0 1919 y(Newton)h(metho)q(ds,)i(and)f(inexact)e(Newton)i(metho)q(ds.)
45 b(A)24 b(simple)e(taxonom)o(y)h(for)i(some)e(p)q(opular)0
1979 y(algorithms)15 b(is)h(giv)o(en)g(in)g(Figure)g(2)g(as)h(an)g(example.)
73 2039 y(Based)h(on)g(this)f(classi\014cation,)g(w)o(e)g(ha)o(v)o(e)g
(implem)o(en)n(ted)e(C++)i(classes)h(for)f(4)h(di\013eren)o(t)f(metho)q(ds:)0
2099 y(1\))e(a)f(Newton)h(metho)q(d,)e(2\))i(a)f(\014nite-di\013erence)f
(Newton)h(metho)q(d,)g(3\))h(a)f(Quasi-Newton)h(metho)q(d,)e(and)0
2159 y(4\))20 b(a)f(nonlinear)g(conjugate)h(gradien)o(t)f(metho)q(d.)29
b(In)19 b(Figure)g(3,)h(w)o(e)e(presen)o(t)h(the)g(class)g(hierarc)o(h)o(y)f
(for)0 2220 y(t)o(w)o(o)f(of)h(the)f(implem)o(en)o(te)o(d)e(metho)q(ds.)24
b(The)17 b(base)h(class,)g(called)e Fm(Optimize)f Fn(consists)i(of)h
(information)0 2280 y(that)23 b(is)f(required)g(b)o(y)g(all)g(optimization)f
(classes.)40 b(W)l(e)22 b(note)h(that)g(once)f(again)i(w)o(e)e(ha)o(v)o(e)g
(used)g(the)0 2340 y(concept)14 b(of)h(p)q(olymorphism)d(through)k(the)e(use)
g(of)h(the)f(virtual)g(function)g Fm(optimize\(\))p Fn(.)k(This)c(function)0
2400 y(is)j(in)o(tended)f(to)i(b)q(e)f(a)h(placeholder)f(for)g(the)g(actual)g
(function)h(that)f(will)f(do)i(the)f(optimization.)23 b(Since)0
2460 y(eac)o(h)16 b(metho)q(d)f(class)i(will)e(ha)o(v)o(e)g(its)i(o)o(wn)f
(algorithm)f(for)i(computing)e(the)h(minim)n(um)d(of)j(a)h(function,)e(it)0
2521 y(is)f(not)g(necessary)g(to)g(de\014ne)f(it)h(in)f(the)h(base)g(class.)
21 b(Ho)o(w)o(ev)o(er,)12 b(it)h(is)h(imp)q(ortan)o(t)f(to)h(de\014ne)g(the)f
(in)o(terface)0 2581 y(at)k(this)f(p)q(oin)o(t)g(since)g(it)f(is)h(common)f
(to)h(all)g(of)g(the)g(deriv)o(ed)f(classes.)73 2641 y(The)20
b(next)e(next)h(t)o(w)o(o)h(classes)f Fm(OptQNewtonLik)n(e)f
Fn(and)i Fm(OptCGLik)n(e)f Fn(are)g(deriv)o(ed)f(from)g(the)0
2701 y Fm(Optimize)g Fn(class.)35 b(The)21 b(ma)s(jor)f(di\013erence)f(b)q
(et)o(w)o(een)h(these)h(t)o(w)o(o)f(classes)h(is)g(that)g(the)g(Newton-lik)o
(e)951 2828 y(13)p eop
bop 293 1231 a @beginspecial 41 @llx 381 @lly 542 @urx 760
@ury 3276 @rwi @setspecial
1 setlinejoin
/M  { moveto } bind def /S { show  } bind def
/R { rmoveto } bind def /L { lineto } bind def
/B { newpath 0 0 M 0 1 L 1 1 L 1 0 L closepath } bind def
/CS { closepath stroke } bind def
/S {
    /fixwidth exch def
    dup length /nchars exch def
    dup stringwidth pop
    fixwidth exch sub nchars div
    exch 0 exch ashow
} def
/bwproc {
	rgbproc
	dup length 3 idiv string 0 3 0
	5 -1 roll {
	add 2 1 roll 1 sub dup 0 eq
	{ pop 3 idiv 3 -1 roll dup 4 -1 roll dup
	  3 1 roll 5 -1 roll put 1 add 3 0 }
	{ 2 1 roll } ifelse
	} forall
	pop pop pop
} def
systemdict /colorimage known not {
	/colorimage {
		pop
		pop
		/rgbproc exch def
		{ bwproc } image
	} def
} if
1 1 scale
0 setlinewidth
/drawtri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
0 setgray
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
stroke
} bind def
/filltri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
fill
} bind def
/cliptri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
0 setgray
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
clip
} bind def
/imgscanrgb {
gsave
translate
/scandy exch def
/scandx exch def
/istr scandx 3 mul string def
scandx scandy scale
scandx scandy 8
[scandx 0 0 scandy neg 0 scandy]
{currentfile istr readhexstring pop}
false 3
colorimage
grestore
} bind def
/imgscanbw {
gsave
translate
/scandy exch def
/scandx exch def
/istr scandx string def
scandx scandy scale
scandx scandy 8
[scandx 0 0 scandy neg 0 scandy]
{currentfile istr readhexstring pop}
image
grestore
} bind def
/showcaseisoencoding [
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign
/dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus
/comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon
/less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft
/backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft
/bar /braceright /asciitilde /guilsinglright
/fraction /florin /quotesingle /quotedblleft
/guilsinglleft /fi /fl /endash
/dagger /daggerdbl /bullet /quotesinglbase
/quotedblbase /quotedblright /ellipsis /trademark
/dotlessi /grave /acute /circumflex
/tilde /macron /breve /dotaccent
/dieresis /perthousand /ring /cedilla
/Ydieresis /hungarumlaut /ogonek /caron
/emdash /exclamdown /cent /sterling
/currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde
/Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis
/Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute
/Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde
/adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis
/igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute
/ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex
/udieresis /yacute /thorn /ydieresis ] def
/showcasedingbatencoding [
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /a1 /a2 /a202 /a3 /a4 /a5 /a119 /a118 /a117
/a11 /a12 /a13 /a14 /a15 /a16 /a105 /a17 /a18 /a19
/a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a6 /a7
/a8 /a9 /a10 /a29
/a30 /a31 /a32 /a33 /a34 /a35 /a36 /a37 /a38 /a39
/a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59
/a60 /a61 /a62 /a63 /a64 /a65 /a66 /a67 /a68 /a69
/a70 /a71 /a72 /a73 /a74 /a203 /a75 /a204 /a76 /a77 /a78
/a79 /a81 /a82 /a83 /a84 /a97 /a98 /a99 /a100 /.notdef
/a205 /a85 /a206 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93
/a94 /a95 /a96
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /a101 /a102 /a103 /a104 /a106 /a107 /a108
/a112 /a111 /a110 /a109
/a120 /a121 /a122 /a123 /a124 /a125 /a126 /a127 /a128 /a129
/a130 /a131 /a132 /a133 /a134 /a135 /a136 /a137 /a138 /a139
/a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159
/a160 /a161 /a163 /a164 /a196 /a165 /a192 /a166 /a167 /a168
/a169 /a170 /a171 /a172 /a173 /a162 /a174 /a175 /a176 /a177
/a178 /a179 /a193 /a180 /a199 /a181 /a200 /a182 /.notdef
/a201 /a183 /a184 /a197 /a185 /a194 /a198 /a186 /a195 /a187
/a188 /a189 /a190 /a191 /.notdef
] def
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding showcaseisoencoding def
  currentdict
end
/Helvetica-Bold-SHOWISO exch definefont pop
/newfont 10 dict def
newfont begin

 /FontType 3 def
 /FontMatrix [1 0 0 1 0 0] def
 /FontBBox [0 0 1 1] def
 /Encoding 256 array def
 0 1 255 {Encoding exch /.notdef put} for

 /CharProcs 1 dict def
 CharProcs begin
 /.notdef {} def

end

 /BuildChar {
  1 0
  0 0 1 1
  setcachedevice
  exch begin
  Encoding exch get
  CharProcs exch get
  end
  exec
 } def
end
/PatternFont newfont definefont pop

/#copies 1 def
gsave
gsave
0 0 0 setrgbcolor
3.000000 setlinewidth
newpath
51.966 511.536 M
47.3629 512.251 L
44.0049 514.395 L
41.892 517.969 L
41.0242 522.973 L
41 524.127 L
41 524.127 L
41 525.196 L
41 527.857 L
41 531.883 L
41 537.046 L
41 543.119 L
41 549.875 L
41 557.085 L
41 564.523 L
41 571.961 L
41 579.172 L
41 585.928 L
41 592.001 L
41 597.164 L
41 601.19 L
41 603.851 L
41 604.92 L
41 604.92 L
41.6225 610.205 L
43.4901 614.061 L
46.6028 616.487 L
50.9606 617.483 L
51.966 617.511 L
51.966 617.511 L
52.5942 617.511 L
54.2612 617.511 L
56.8974 617.511 L
60.4332 617.511 L
64.7989 617.511 L
69.9249 617.511 L
75.7416 617.511 L
82.1795 617.511 L
89.1689 617.511 L
96.6401 617.511 L
104.524 617.511 L
112.75 617.511 L
121.249 617.511 L
129.952 617.511 L
138.789 617.511 L
147.69 617.511 L
156.585 617.511 L
165.406 617.511 L
174.082 617.511 L
182.544 617.511 L
190.722 617.511 L
198.547 617.511 L
205.948 617.511 L
212.857 617.511 L
219.204 617.511 L
224.919 617.511 L
229.933 617.511 L
234.175 617.511 L
237.577 617.511 L
240.069 617.511 L
241.58 617.511 L
242.043 617.511 L
242.043 617.511 L
246.646 616.796 L
250.004 614.652 L
252.117 611.078 L
252.984 606.074 L
253.009 604.92 L
253.009 604.92 L
253.009 603.851 L
253.009 601.19 L
253.009 597.164 L
253.009 592.001 L
253.009 585.928 L
253.009 579.172 L
253.009 571.961 L
253.009 564.523 L
253.009 557.085 L
253.009 549.875 L
253.009 543.119 L
253.009 537.046 L
253.009 531.883 L
253.009 527.857 L
253.009 525.196 L
253.009 524.127 L
253.009 524.127 L
252.386 518.842 L
250.518 514.986 L
247.406 512.56 L
243.048 511.564 L
242.043 511.536 L
242.043 511.536 L
241.42 511.536 L
239.767 511.536 L
237.155 511.536 L
233.65 511.536 L
229.323 511.536 L
224.24 511.536 L
218.472 511.536 L
212.086 511.536 L
205.152 511.536 L
197.737 511.536 L
189.91 511.536 L
181.741 511.536 L
173.297 511.536 L
164.647 511.536 L
155.86 511.536 L
147.004 511.536 L
138.149 511.536 L
129.362 511.536 L
120.712 511.536 L
112.268 511.536 L
104.099 511.536 L
96.272 511.536 L
88.8571 511.536 L
81.9225 511.536 L
75.5366 511.536 L
69.7683 511.536 L
64.6859 511.536 L
60.3582 511.536 L
56.8538 511.536 L
54.2412 511.536 L
52.589 511.536 L
51.966 511.536 L
closepath
stroke
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 44 512.585] concat
newpath
0 0 M 0 99.6793 L 207.498 99.6793 L 207.498 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
42 510.585 M 42 614.665 L 253.498 614.665 L 253.498 510.585 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 44 512.585] concat
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
0 0 0 setrgbcolor
10 90.0793 M (OptNewtonLike) 88.008 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 78.0793 M (    ) 13.344 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 66.0793 M (    ColumnVector   ) 105.36 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
115.36 66.0793 M (    gprev) 46.02 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 54.0793 M (    SymmetricMatrix) 110.04 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
120.04 54.0793 M (  Hessian) 52.692 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 42.0793 M (    int   grad_eval) 94.044 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
104.044 42.0793 M (s) 6.672 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 30.0793 M (    virtual void  o) 91.368 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
101.368 30.0793 M (ptimize\(\)) 49.332 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 18.0793 M (    virtual void  C) 92.7 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
102.7 18.0793 M (heckConvg\(\)) 72.672 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 347.162 531.718] concat
newpath
0 0 M 0 75.5464 L 187.199 75.5464 L 187.199 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
345.162 529.718 M 345.162 609.665 L 536.362 609.665 L 536.362 529.718 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 347.162 531.718] concat
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
0 0 0 setrgbcolor
10 65.9464 M (OptCGLike) 62.676 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 41.9464 M (   ColumnVector   g) 109.356 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
119.356 41.9464 M (prev) 25.344 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 29.9464 M (    int   grad_eval) 94.044 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
104.044 29.9464 M (s) 6.672 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 17.9464 M (    virtual void  o) 91.368 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
101.368 17.9464 M (ptimize\(\) ) 52.668 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 5.94639 M (    virtual void  C) 92.7 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
102.7 5.94639 M (heckConvg\(\)) 72.672 S
setmatrix
grestore
gsave
0 0 0 setrgbcolor
3.000000 setlinewidth
newpath
355.929 512.635 M
351.668 513.349 L
348.56 515.494 L
346.605 519.068 L
345.802 524.071 L
345.779 525.226 L
345.779 525.226 L
345.779 526.294 L
345.779 528.955 L
345.779 532.981 L
345.779 538.145 L
345.779 544.218 L
345.779 550.973 L
345.779 558.184 L
345.779 565.622 L
345.779 573.06 L
345.779 580.271 L
345.779 587.026 L
345.779 593.099 L
345.779 598.263 L
345.779 602.289 L
345.779 604.95 L
345.779 606.018 L
345.779 606.018 L
346.355 611.304 L
348.084 615.159 L
350.965 617.585 L
354.998 618.582 L
355.929 618.609 L
355.929 618.609 L
356.51 618.609 L
358.053 618.609 L
360.493 618.609 L
363.765 618.609 L
367.806 618.609 L
372.55 618.609 L
377.934 618.609 L
383.892 618.609 L
390.361 618.609 L
397.276 618.609 L
404.572 618.609 L
412.186 618.609 L
420.052 618.609 L
428.107 618.609 L
436.286 618.609 L
444.524 618.609 L
452.757 618.609 L
460.921 618.609 L
468.951 618.609 L
476.782 618.609 L
484.352 618.609 L
491.594 618.609 L
498.444 618.609 L
504.839 618.609 L
510.713 618.609 L
516.002 618.609 L
520.642 618.609 L
524.569 618.609 L
527.718 618.609 L
530.024 618.609 L
531.423 618.609 L
531.851 618.609 L
531.851 618.609 L
536.111 617.895 L
539.219 615.75 L
541.174 612.176 L
541.978 607.173 L
542 606.018 L
542 606.018 L
542 604.95 L
542 602.289 L
542 598.263 L
542 593.099 L
542 587.026 L
542 580.271 L
542 573.06 L
542 565.622 L
542 558.184 L
542 550.973 L
542 544.218 L
542 538.145 L
542 532.981 L
542 528.955 L
542 526.294 L
542 525.226 L
542 525.226 L
541.424 519.94 L
539.695 516.085 L
536.814 513.659 L
532.781 512.662 L
531.851 512.635 L
531.851 512.635 L
531.274 512.635 L
529.745 512.635 L
527.327 512.635 L
524.083 512.635 L
520.078 512.635 L
515.374 512.635 L
510.035 512.635 L
504.125 512.635 L
497.707 512.635 L
490.844 512.635 L
483.6 512.635 L
476.039 512.635 L
468.224 512.635 L
460.218 512.635 L
452.086 512.635 L
443.89 512.635 L
435.693 512.635 L
427.561 512.635 L
419.555 512.635 L
411.74 512.635 L
404.179 512.635 L
396.935 512.635 L
390.073 512.635 L
383.654 512.635 L
377.744 512.635 L
372.405 512.635 L
367.701 512.635 L
363.696 512.635 L
360.452 512.635 L
358.034 512.635 L
356.505 512.635 L
355.929 512.635 L
closepath
stroke
grestore
gsave
0 0 0 setrgbcolor
4.000000 setlinewidth
newpath
296.861 651.826 M
199.216 620.56 L
stroke
grestore
gsave
0 0 0 setrgbcolor
4.000000 setlinewidth
newpath
289.861 651.875 M
405.4 620.708 L
stroke
grestore
gsave
0 0 0 setrgbcolor
4.000000 setlinewidth
newpath
138.11 507.536 M
138.11 462.778 L
stroke
grestore
gsave
0 0 0 setrgbcolor
4.000000 setlinewidth
newpath
450.251 509.585 M
450.251 466.876 L
stroke
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 157.3 655.074] concat
newpath
0 0 M 0 99.6793 L 274.032 99.6793 L 274.032 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
155.3 653.074 M 155.3 757.154 L 433.332 757.154 L 433.332 653.074 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 157.3 655.074] concat
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
0 0 0 setrgbcolor
10 90.0793 M (Optimize) 50.676 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 66.0793 M (    int   dim) 59.352 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 54.0793 M (    TOLS   *tol) 74.688 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 42.0793 M (    double  fprev, ) 95.364 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
105.364 42.0793 M ( step_length) 70.68 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 30.0793 M (    int   ret_code,) 91.368 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
101.368 30.0793 M (   iter_taken,  fcn) 94.704 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
196.072 30.0793 M (_evals) 36.696 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 18.0793 M (    virtual void   ) 87.372 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
97.372 18.0793 M (optimize\(\) = 0) 77.016 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 6.07926 M (    virtual void   ) 87.372 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
97.372 6.07926 M (CheckConvg\(\) = 0 ) 105.024 S
setmatrix
grestore
gsave
0 0 0 setrgbcolor
3.000000 setlinewidth
newpath
167.488 654.025 M
162.1 654.55 L
157.937 656.123 L
154.998 658.745 L
153.284 662.417 L
152.789 666.616 L
152.789 666.616 L
152.789 667.685 L
152.789 670.346 L
152.789 674.372 L
152.789 679.535 L
152.789 685.608 L
152.789 692.364 L
152.789 699.575 L
152.789 707.013 L
152.789 714.451 L
152.789 721.661 L
152.789 728.417 L
152.789 734.49 L
152.789 739.653 L
152.789 743.679 L
152.789 746.34 L
152.789 747.409 L
152.789 747.409 L
153.401 752.024 L
155.238 755.59 L
158.299 758.107 L
162.585 759.575 L
167.488 760 L
167.488 760 L
167.729 760 L
168.33 760 L
169.279 760 L
170.565 760 L
172.175 760 L
174.098 760 L
176.323 760 L
178.838 760 L
181.63 760 L
184.689 760 L
188.003 760 L
191.56 760 L
195.349 760 L
199.357 760 L
203.574 760 L
207.987 760 L
212.585 760 L
217.356 760 L
222.288 760 L
227.37 760 L
232.591 760 L
237.938 760 L
243.399 760 L
248.964 760 L
254.621 760 L
260.357 760 L
266.161 760 L
272.023 760 L
277.928 760 L
283.867 760 L
289.828 760 L
295.798 760 L
301.767 760 L
307.722 760 L
313.652 760 L
319.546 760 L
325.39 760 L
331.175 760 L
336.888 760 L
342.518 760 L
348.052 760 L
353.48 760 L
358.789 760 L
363.968 760 L
369.006 760 L
373.89 760 L
378.608 760 L
383.151 760 L
387.504 760 L
391.658 760 L
395.6 760 L
399.319 760 L
402.802 760 L
406.039 760 L
409.017 760 L
411.726 760 L
414.152 760 L
416.286 760 L
418.114 760 L
419.626 760 L
420.809 760 L
421.652 760 L
422.143 760 L
422.272 760 L
422.272 760 L
427.659 759.476 L
431.822 757.902 L
434.761 755.28 L
436.475 751.608 L
436.971 747.409 L
436.971 747.409 L
436.971 746.34 L
436.971 743.679 L
436.971 739.653 L
436.971 734.49 L
436.971 728.417 L
436.971 721.661 L
436.971 714.451 L
436.971 707.013 L
436.971 699.575 L
436.971 692.364 L
436.971 685.608 L
436.971 679.535 L
436.971 674.372 L
436.971 670.346 L
436.971 667.685 L
436.971 666.616 L
436.971 666.616 L
436.358 662.001 L
434.522 658.435 L
431.46 655.918 L
427.174 654.45 L
422.272 654.025 L
422.272 654.025 L
422.032 654.025 L
421.436 654.025 L
420.496 654.025 L
419.222 654.025 L
417.626 654.025 L
415.72 654.025 L
413.515 654.025 L
411.022 654.025 L
408.254 654.025 L
405.221 654.025 L
401.936 654.025 L
398.409 654.025 L
394.652 654.025 L
390.677 654.025 L
386.495 654.025 L
382.117 654.025 L
377.556 654.025 L
372.822 654.025 L
367.927 654.025 L
362.883 654.025 L
357.7 654.025 L
352.392 654.025 L
346.968 654.025 L
341.441 654.025 L
335.822 654.025 L
330.123 654.025 L
324.354 654.025 L
318.528 654.025 L
312.656 654.025 L
306.75 654.025 L
300.821 654.025 L
294.88 654.025 L
288.939 654.025 L
283.009 654.025 L
277.103 654.025 L
271.231 654.025 L
265.405 654.025 L
259.637 654.025 L
253.937 654.025 L
248.318 654.025 L
242.791 654.025 L
237.368 654.025 L
232.059 654.025 L
226.877 654.025 L
221.833 654.025 L
216.938 654.025 L
212.204 654.025 L
207.642 654.025 L
203.265 654.025 L
199.083 654.025 L
195.107 654.025 L
191.351 654.025 L
187.824 654.025 L
184.538 654.025 L
181.505 654.025 L
178.737 654.025 L
176.245 654.025 L
174.04 654.025 L
172.133 654.025 L
170.538 654.025 L
169.264 654.025 L
168.323 654.025 L
167.727 654.025 L
167.488 654.025 L
closepath
stroke
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 368.801 390.434] concat
newpath
0 0 M 0 67.5531 L 155.623 67.5531 L 155.623 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
366.801 388.434 M 366.801 460.388 L 526.424 460.388 L 526.424 388.434 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 368.801 390.434] concat
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
0 0 0 setrgbcolor
10 57.9531 M (OptCG) 38.664 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 33.9531 M (    NLP1 *nlp) 70.02 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 21.9531 M (    void optimize\(\)) 98.016 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
108.016 21.9531 M ( ) 3.336 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 9.95313 M (    int CheckConvg\() 108.684 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
118.684 9.95313 M (\)) 3.996 S
setmatrix
grestore
gsave
matrix currentmatrix
[169.156 0 0 -80.6793 365.056 465.778] concat
B
setmatrix
0 0 0 setrgbcolor
3.000000 setlinewidth
gsave stroke grestore
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 60.8095 384.936] concat
newpath
0 0 M 0 70.3001 L 157.879 70.3001 L 157.879 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
58.8095 382.936 M 58.8095 457.636 L 220.688 457.636 L 220.688 382.936 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 60.8095 384.936] concat
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
0 0 0 setrgbcolor
10 60.7001 M (OptQNewton) 73.332 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 36.7001 M (    NLP1 *nlp) 70.02 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 24.7001 M (    void optimize\(\)) 98.016 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
10 12.7001 M (    int CheckConvg\() 108.684 S
/Helvetica-Bold-SHOWISO findfont 12 scalefont setfont
118.684 12.7001 M (\)) 3.996 S
setmatrix
grestore
gsave
matrix currentmatrix
[169.156 0 0 -79.6793 59.1926 461.679] concat
B
setmatrix
0 0 0 setrgbcolor
3.000000 setlinewidth
gsave stroke grestore
grestore
grestore
showpage
 @endspecial 561 1378 a Fn(Figure)16 b(3:)21 b(Optimization)14
b(metho)q(d)i(classes)0 1512 y(classes)d(require)e(extra)i(storage)h(for)f
(the)f(Hessian)h(matrix.)18 b(Finally)l(,)12 b(the)g(last)h(t)o(w)o(o)g
(classes)f Fm(OptQNew-)0 1572 y(ton)19 b Fn(and)g Fm(OptCG)h
Fn(constitute)e(the)h(actual)g(optimization)e(metho)q(ds.)29
b(It)19 b(is)f(these)h(t)o(w)o(o)g(classes)g(that)0 1632 y(de\014ne)e(the)f
(optimization)f(algorithms)i(sp)q(eci\014c)f(to)h(eac)o(h)g(metho)q(d.)22
b(In)17 b(the)g(case)f(of)i(the)e Fm(OptQNew-)0 1693 y(ton)i
Fn(class,)g(the)f(algorithm)g(consists)i(of)f(a)g(Quasi-Newton)g(metho)q(d)g
(with)f(a)i(BF)o(GS)e(up)q(date)h(form)o(ula)0 1753 y(for)f(the)f(Hessian.)k
(The)d Fm(OptCG)g Fn(class)f(implem)o(en)n(ts)e(a)j(nonlinear)f(conjugate)h
(gradien)o(t)f(metho)q(d.)73 1813 y(As)21 b(an)h(example)c(of)k(the)f
(re-usabilit)o(y)e(of)j(ob)s(ject-orien)o(ted)d(co)q(des,)k(all)d(of)i(the)e
(linear)h(algebra)g(is)0 1873 y(handled)e(through)i(the)e(use)g(of)h(the)f
(matrix)e(pac)o(k)m(age)j(dev)o(elop)q(ed)e(b)o(y)h(Da)o(vies)g([4],)g(with)g
(some)f(minor)0 1933 y(enhancemen)o(ts)c(for)j(the)f(matrices)f(that)i(arise)
f(in)g(the)h(optimization)d(algorithms.)21 b(In)c(addition,)f(all)g(of)0
1994 y(the)e(optimization)e(metho)q(ds)h(use)h(the)g(same)e(line)h(searc)o
(h,)h(whic)o(h)f(is)h(based)g(on)g(the)g(algorithm)f(b)o(y)g(More)0
2054 y(and)k(Th)o(uen)o(te)e([6].)0 2163 y Fl(4.)23 b(Example)f(Co)r(de)73
2272 y Fn(T)l(o)c(illustrate)e(some)h(of)g(the)g(concepts,)g(w)o(e)g(no)o(w)h
(presen)o(t)e(an)i(example)d(that)j(solv)o(es)f(a)g(small)f(non-)0
2333 y(linear)21 b(optimization)e(problem)h(using)i(the)f(optimization)e
(classes.)37 b(The)21 b(test)g(problem)f(consists)i(of)0 2393
y(Rosen)o(bro)q(c)o(k's)16 b(function,)631 2453 y(min)661 2478
y Fh(x)736 2453 y Fn(100\()p Fk(x)855 2460 y Fe(2)887 2453
y Fj(\000)11 b Fk(x)965 2432 y Fe(2)965 2465 y(1)984 2453 y
Fn(\))1003 2432 y Fe(2)1050 2453 y Fn(+)28 b(\(1)11 b Fj(\000)g
Fk(x)1248 2460 y Fe(1)1267 2453 y Fn(\))1286 2432 y Fe(2)1306
2453 y Fk(;)0 2551 y Fn(with)k(an)h(initial)e(guess)i(of)g(\()p
Fj(\000)p Fn(1)p Fk(:)p Fn(2)p Fk(;)8 b Fn(1)p Fk(:)p Fn(0\))p
Fk(:)15 b Fn(In)g(this)g(example,)e(w)o(e)i(will)f(assume)h(that)g(\014rst)h
(deriv)m(ativ)o(es)e(are)0 2611 y(a)o(v)m(ailable)h(but)i(that)f(second)g
(deriv)m(ativ)o(es)f(are)h(not)h(a)o(v)m(ailable.)j(W)l(e)c(will)f(use)h(a)g
(quasi-Newton)h(metho)q(d)0 2671 y(that)g(emplo)o(ys)d(a)j(BF)o(GS)e(up)q
(date)i(form)o(ula)e(for)i(the)f(Hessian.)951 2828 y(14)p eop
bop 0 430 1950 3 v 24 592 a Fn(1)17 b Fd(#include)c Fn(")p
Fd(opt.h)p Fn(")24 652 y(2)k Fm(v)n(oid)f Fn(rosen\()p Fm(in)n(t)h
Fn(mo)q(de,)e Fm(in)n(t)h Fn(n,)g(ColumnV)l(ector)e(x,)i Fm(double)p
Fn(&)f(fx,)h(ColumnV)l(ector&)e(g\);)24 712 y(3)24 772 y(4)j(main)e(\(\))24
833 y(5)i Fj(f)24 893 y Fn(6)66 b Fm(in)n(t)16 b Fn(n)g(=)h(2;)24
953 y(7)66 b(ColumnV)l(ector)14 b(x\(n\),)i(g\(n\);)24 1013
y(8)24 1073 y(9)66 b(USERF)o(CN1)15 b(tstf)i(=)f(&rosen;)659
b Fi(//)24 b(De\014ne)i(the)f(test)g(function)0 1134 y Fn(10)0
1194 y(11)66 b Fm(NLF1)16 b Fn(nlp\(n,tstf)s(\);)698 b Fi(//)48
b(De\014ne)26 b(the)f(Nonline)n(ar)g(pr)n(oblem)0 1254 y Fn(12)0
1314 y(13)66 b(x\(1\))16 b(=)g(-1.2;)0 1374 y(14)66 b(x\(2\))16
b(=)g(1.0;)0 1435 y(15)66 b(nlp.SetX\(x\);)0 1495 y(16)g(nlp.Ev)m(al\(\);)928
b Fi(//)49 b(Evaluate)25 b(the)g(function)h(at)f(x)0 1555 y
Fn(17)0 1615 y(18)66 b Fm(TOLS)16 b Fn(tol;)750 b Fi(//)48
b(Cr)n(e)n(ate)24 b(a)g("T)l(oler)n(anc)n(es")h(obje)n(ct)g(and)0
1675 y Fn(19)66 b(tol.SetDefaultT)l(ol\(\);)940 b Fi(//)49
b(set)25 b(the)f(toler)n(anc)n(es)0 1736 y Fn(20)66 b(tol.SetFtol\(1.e-9\);)0
1796 y(21)g(tol.SetMaxIter\(100\);)0 1856 y(22)0 1916 y(23)g
Fm(OptQNewton)16 b Fn(ob)s(jfcn\(&nlp,&tol\);)33 b Fi(//)49
b(Build)25 b(a)f(Quasi-Newton)j(obje)n(ct)e(and)g(optimize)0
1976 y Fn(24)0 2036 y(25)66 b(ob)s(jfcn.optimize\(\);)0 2097
y(26)0 2157 y(27)g(nlp.Prin)o(tState\()p Fd("Solut)o(ion)22
b(from)i(quasi-newt)o(on")o Fn(\);)0 2217 y(28)17 b Fj(g)p
0 2319 V 357 2420 a Fn(Figure)f(4:)22 b(Example)14 b(co)q(de)j(for)f(solving)
g(Rosen)o(bro)q(c)o(k's)g(function)951 2828 y(15)p eop
bop 73 195 a Fn(Figure)24 b(4)g(displa)o(ys)f(the)h(source)g(listing)f(for)h
(the)g(sample)f(problem.)42 b(There)24 b(are)g(three)f(ma)s(jor)0
255 y(sections)17 b(in)h(the)f(example)e(co)q(de:)24 b(1\))18
b(the)f(problem)f(de\014nition,)h(2\))h(the)g(tolerance)f(de\014nition,)g
(and)h(3\))0 315 y(the)f(metho)q(d)f(de\014nition.)22 b(Since)16
b(only)h(\014rst)g(deriv)m(ativ)o(es)e(are)i(a)o(v)m(ailable,)f(w)o(e)g
(\014rst)h(create)f(an)h(ob)s(ject)g(of)0 376 y(t)o(yp)q(e)d
Fm(NLF1)g Fn(on)h(line)e(11.)21 b(The)15 b(t)o(w)o(o)f(comp)q(onen)o(ts)f
(needed)h(to)h(sp)q(ecify)e(this)h(ob)s(ject)g(are)h(the)f(dimension)0
436 y(of)j(the)f(problem)f(and)i(a)f(p)q(oin)o(ter)h(to)f(a)h(function.)k
(The)c(next)f(step)g(is)g(to)h(set)f(the)g(initial)f(guess)i(for)g(this)0
496 y(problem.)27 b(Here)18 b(w)o(e)g(are)h(using)g(t)o(w)o(o)g(of)g(the)f
(mem)o(b)q(er)e(functions)j(for)g Fm(NLF1)f Fn(to)i(access)e(the)h(data)g(in)
0 556 y(the)d(class)g(and)h(to)g(ev)m(aluate)f(the)g(function)g(at)g(the)g
(curren)o(t)g(p)q(oin)o(t.)73 616 y(The)k(next)g(step)g(is)g(to)h(create)e(a)
i Fm(TOLS)f Fn(ob)s(ject)g(on)g(lines)g(18-21)i(that)e(con)o(tains)g(the)g
(tolerances)0 677 y(that)e(will)e(b)q(e)h(used)g(in)g(the)g(optimization)e
(metho)q(d.)24 b(In)17 b(fact,)f(the)h(optimization)f(metho)q(d)g(ob)s(ject)h
(can)0 737 y(b)q(e)h(created)g(without)g(a)g(sp)q(eci\014c)g(reference)e(to)i
(a)h Fm(TOLS)f Fn(ob)s(ject)f(but)h(if)g(the)g(user)g(wishes)g(to)g(c)o
(hange)0 797 y(an)o(y)e(of)h(the)f(default)g(tolerances)g(it)f(is)h
(necessary)g(to)h(create)f(the)g Fm(TOLS)g Fn(ob)s(ject.)73
857 y(The)d(last)f(step)h(consists)f(of)h(creating)f(an)h(optimization)e
(metho)q(d)h(ob)s(ject)g(from)f(the)h Fm(OptQNewton)0 917 y
Fn(class)k(using)h(the)f Fm(NLF1)g Fn(and)h Fm(TOLS)f Fn(ob)s(jects.)21
b(W)l(e)16 b(then)g(call)g(the)g(mem)n(b)q(er)e(function)i
Fm(optimize)e Fn(on)0 978 y(line)i(25)i(to)f(do)g(the)g(actual)g
(optimization.)22 b(Finally)15 b(the)i(solution)g(is)g(prin)o(ted)f(using)i
(the)e Fm(Prin)n(tState)0 1038 y Fn(mem)o(b)q(er)d(function.)73
1098 y(W)l(e)23 b(note)f(that)h(if)g(the)f(user)h(w)o(ould)f(no)o(w)h(lik)o
(e)e(to)i(try)f(a)i(di\013eren)o(t)d(optimization)g(metho)q(d,)i(the)0
1158 y(pro)q(cedure)18 b(w)o(ould)f(consist)h(of)f(replacing)g(line)g(23)h
(with)f(the)h(creation)f(of)h(a)g(di\013eren)o(t)e(t)o(yp)q(e)h(of)h(ob)s
(ject,)0 1218 y(for)f(example)d(an)i Fm(OptCG)h Fn(ob)s(ject)f(to)g(try)g
(the)g(nonlinear)g(conjugate)h(gradien)o(t)f(metho)q(d.)0 1327
y Fl(5.)23 b(Summary)73 1437 y Fn(In)17 b(this)g(rep)q(ort,)h(w)o(e)e(ha)o(v)
o(e)h(presen)o(ted)f(a)i(C++)f(class)g(library)g(for)g(nonlinear)g
(unconstrained)h(opti-)0 1497 y(mization.)26 b(W)l(e)18 b(ha)o(v)o(e)g(prop)q
(osed)i(that)f(a)f(clear)g(distinction)g(b)q(e)g(made)g(b)q(et)o(w)o(een)f
(nonlinear)h(problems)0 1557 y(and)f(optimization)d(metho)q(ds.)21
b(Based)c(on)f(this)h(distinction,)e(w)o(e)h(ha)o(v)o(e)f(implem)o(en)o(te)o
(d)f(a)i(set)h(of)f(ob)s(ject-)0 1617 y(orien)o(ted)f(classes)h(sp)q
(eci\014cally)f(suited)h(to)g(eac)o(h)g(case.)21 b(In)15 b(this)h(w)o(a)o(y)l
(,)g(w)o(e)f(ha)o(v)o(e)g(b)q(een)h(able)g(to)h(dev)o(elop)e(a)0
1678 y(set)h(of)g(classes)g(that)h(address)g(the)f(imp)q(ortan)o(t)f(issues)h
(for)g(b)q(oth)h(the)f(users)g(and)h(the)f(dev)o(elop)q(ers)f(of)h(op-)0
1738 y(timization)d(algorithms.)20 b(F)l(rom)13 b(the)i(p)q(oin)o(t)g(of)h
(view)e(of)h(a)g(user)g(requiring)f(an)i(optimization)d(algorithm)0
1798 y(to)j(solv)o(e)f(a)h(particular)f(problem,)f(these)i(libraries)e(ha)o
(v)o(e)h(b)q(een)h(written)f(so)h(that)h(they)e(are)g(easily)g(used.)0
1858 y(F)l(rom)j(the)h(p)q(oin)o(t)g(of)g(view)g(of)g(someone)f(dev)o
(eloping)g(optimization)f(algorithms,)i(these)g(classes)g(ha)o(v)o(e)0
1918 y(b)q(een)13 b(designed)f(so)h(that)g(new)g(algorithms)f(can)h(b)q(e)f
(easily)g(incorp)q(orated)h(in)o(to)g(the)f(existing)g(framew)o(ork.)73
1979 y(W)l(e)h(curren)o(tly)f(ha)o(v)o(e)h(four)g(metho)q(ds)g(implem)o(en)o
(te)o(d:)k(1\))d(a)g(Newton)f(metho)q(d,)g(2\))h(a)f(\014nite-di\013erence)0
2039 y(Newton)h(metho)q(d,)f(3\))h(a)h(Quasi-Newton)f(metho)q(d,)f(and)i(4\))
f(a)g(nonlinear)g(conjugate)h(gradien)o(t)e(metho)q(d.)0 2099
y(F)l(uture)20 b(w)o(ork)f(will)g(concen)o(trate)g(on)i(incorp)q(orating)g
(new)e(algorithms.)32 b(In)20 b(particular,)g(w)o(e)f(are)h(cur-)0
2159 y(ren)o(tly)15 b(w)o(orking)i(on)h(dev)o(eloping)d(new)i(algorithms)f
(based)h(on)h(pattern)f(searc)o(h)f(metho)q(ds)g(for)h(the)g(case)0
2219 y(of)g(noisy)g(optimization.)22 b(W)l(e)17 b(are)g(also)g(w)o(orking)g
(on)h(implem)o(en)n(ting)c(new)j(classes)g(for)h(large-scale)e(op-)0
2280 y(timization.)j(Since)14 b(most)h(of)h(the)f(p)q(opular)i(metho)q(ds)e
(for)h(large-scale)f(optimization)f(use)i(v)m(ariations)g(of)0
2340 y(one)k(of)g(the)f(metho)q(ds)g(already)g(impleme)o(n)o(ted,)e(the)i
(extension)g(to)h(large-scale)g(problems)e(should)i(b)q(e)0
2400 y(straigh)o(tforw)o(ard.)73 2460 y(Another)11 b(area)h(w)o(e)f(will)f
(address)i(concerns)f(the)h(case)f(of)h(constrained)f(optimization)f
(problems.)18 b(The)0 2520 y(question)13 b(w)o(e)g(wish)g(to)h(address)f(is)g
(whether)g(the)g(constrained)h(optimization)d(case)i(is)g(a)h(sub-class)g(of)
f(the)0 2581 y(unconstrained)j(optimization)f(case)h(or)g(is)g(a)g
(constrained)g(optimization)f(problem)f(an)j(unconstrained)0
2641 y(problem)c(that)i(happ)q(ens)g(to)g(ha)o(v)o(e)f(constrain)o(ts.)21
b(In)14 b(the)g(OOP)h(terminology)l(,)e(this)h(is)g(the)h(\\is-a")g(v)o
(ersus)0 2701 y(a)i(\\has-a")h(question,)e(whic)o(h)f(has)i(implications)d
(in)i(the)g(implem)o(en)o(tati)o(on)e(of)j(new)f(classes.)951
2828 y(16)p eop
bop 73 195 a Fn(Finally)l(,)18 b(w)o(e)g(note)h(that)g(the)f(libraries)g
(presen)o(ted)g(in)g(this)h(article)e(should)i(not)g(b)q(e)g(considered)f(as)
0 255 y(a)i(\014nished)f(pro)q(duct.)32 b(The)20 b(true)f(test)g(will)g(b)q
(e)g(the)h(usefulness)f(of)h(these)f(class)h(libraries)e(for)i(solving)0
315 y(real-w)o(orld)f(applications.)30 b(T)l(o)o(w)o(ards)19
b(this)g(end,)h(w)o(e)e(are)h(also)h(dev)o(eloping)e(a)h(suite)g(of)g(test)g
(problems)0 376 y(from)d(v)m(arious)h(man)o(ufacturing)e(design)i(problems)e
(using)i(the)g(nonlinear)f(problem)f(classes)i(dev)o(elop)q(ed)0
436 y(here.)951 2828 y(17)p eop
bop 819 195 a Fc(REFERENCES)32 398 y Fb([1])23 b(Brett)12 b(M.)f(Av)o(eric)o
(k)g(and)f(Jorge)i(J.)e(More.)18 b(User)12 b(guide)e(for)h(the)g(MINP)m(A)o
(CK-2)g(test)g(problem)f(collection.)16 b(T)m(ec)o(hnical)167
448 y(Rep)q(ort)e(ANL/MCS-TM-157,)e(Argonne)j(National)d(Lab)q(oratory)m(,)h
(1991.)32 497 y([2])23 b(Timoth)o(y)17 b(Budd.)32 b Fa(A)o(n)19
b(Intr)n(o)n(duction)g(to)h(Obje)n(ct-Oriente)n(d)d(Pr)n(o)n(gr)n(amming)p
Fb(.)32 b(Addison-W)m(esley)m(,)18 b(Reading,)g(MA,)167 547
y(1991.)32 597 y([3])23 b(Da)o(vid)14 b(M.)g(Butler.)21 b(F)m(undamen)o(tals)
13 b(of)h(ob)r(ject-orien)o(ted)i(programmi)o(ng.)h(Limit)c(P)o(oin)o(t)h
(Systems,)g(F)m(remon)o(t)f(CA,)167 647 y(1992.)32 697 y([4])23
b(R.)12 b(B.)h(Da)o(vies.)k(NEWMA)m(T07,)11 b(an)i(exp)q(erimen)o(tal)f
(matrix)f(pac)o(k)n(age)h(in)g(C++.)18 b(rob)q(ertd@k)n(auri.vu)o(w.ac.nz,)12
b(1993.)32 747 y([5])23 b(Allen)15 b(I.)h(Holub.)22 b Fa(C+)16
b(C++)g(Pr)n(o)n(gr)n(amming)g(With)g(Obje)n(cts)g(in)g(C)h(and)g(C++)p
Fb(.)22 b(McGra)o(w-Hill,)14 b(New)i(Y)m(ork,)f(NY,)167 796
y(1992.)32 846 y([6])23 b(Jorge)d(J.)g(More)g(and)g(Da)o(vid)e(J.)i(Th)o(uen)
o(te.)36 b(Line)19 b(searc)o(h)i(algorithms)c(with)j(guaran)o(teed)g
(su\016cien)o(t)g(decrease.)167 896 y(T)m(ec)o(hnical)13 b(Rep)q(ort)h
(MCS-P330-1092,)e(Argonne)i(National)f(Lab)q(oratory)m(,)g(1992.)32
946 y([7])23 b(Jorge)16 b(J.)f(More)h(and)f(Stephen)h(J.)f(W)m(righ)o(t.)21
b Fa(Optimization)16 b(Softwar)n(e)f(Guide)p Fb(.)23 b(SIAM)15
b(Press,)i(Philadelphia,)d(P)m(A,)167 996 y(1993.)32 1045 y([8])23
b(Da)o(v)o(e)17 b(Nic)o(hols,)f(Geo\013)h(Dun)o(bar,)g(and)g(Jon)g(Claerb)q
(out.)27 b(The)17 b(C++)g(language)f(in)h(ph)o(ysical)f(science.)29
b(In)17 b Fa(OON-)167 1095 y(SKI)g('93)p Fb(,)g(pages)g(339{353,)e(April)h
(1993.)25 b(Pro)q(ceedings)18 b(of)d(the)j(First)e(Ann)o(ual)g(Ob)r
(ject-Orien)o(ted)j(Numerics)167 1145 y(Conference.)32 1195
y([9])k(Ronald)16 b(Sc)o(ho)q(en)o(b)q(erg.)29 b(An)17 b(ob)r(ject-orien)o
(ted)i(design)e(of)g(an)g(optimization)d(mo)q(dule.)26 b(In)18
b Fa(OON-SKI)f('93)p Fb(,)h(pages)167 1245 y(132{139,)11 b(April)j(1993.)j
(Pro)q(ceedings)e(of)e(the)i(First)f(Ann)o(ual)f(Ob)r(ject-Orien)o(ted)j
(Numerics)e(Conference.)11 1294 y([10])23 b(B.)14 b(Stroustrup.)19
b Fa(The)c(C++)f(Pr)n(o)n(gr)n(amming)g(L)n(anguage)p Fb(.)20
b(Addison-W)m(esley)m(,)12 b(Reading,)h(Massac)o(h)o(usetts,)i(1987.)951
2828 y Fn(18)p eop end
userdict /end-hook known{end-hook}if
